{"version":3,"file":"js/567.f38a24db.js","mappings":"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","sources":["webpack://neat_service/./node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Utils/Utils.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Canvas.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/FrameManager.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Random.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Options/Classes/Options.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Particle.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/Point.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/Range.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Particles.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Retina.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Container.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Loader.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/engine.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","webpack://neat_service/./node_modules/tsparticles-engine/esm/index.js","webpack://neat_service/./node_modules/tsparticles-path-polygon/esm/PolygonPathGenerator.js","webpack://neat_service/./node_modules/tsparticles-path-polygon/esm/index.js","webpack://neat_service/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","webpack://neat_service/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","webpack://neat_service/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","webpack://neat_service/./node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","webpack://neat_service/./node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","webpack://neat_service/./node_modules/tsparticles-plugin-absorbers/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","webpack://neat_service/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","webpack://neat_service/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","webpack://neat_service/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","webpack://neat_service/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","webpack://neat_service/./node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-destroy/esm/index.js","webpack://neat_service/./node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","webpack://neat_service/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","webpack://neat_service/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","webpack://neat_service/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","webpack://neat_service/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","webpack://neat_service/./node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","webpack://neat_service/./node_modules/tsparticles-plugin-emitters/esm/Emitters.js","webpack://neat_service/./node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","webpack://neat_service/./node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","webpack://neat_service/./node_modules/tsparticles-plugin-emitters/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-trail/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","webpack://neat_service/./node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","webpack://neat_service/./node_modules/tsparticles-updater-roll/esm/RollUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-roll/esm/index.js","webpack://neat_service/./node_modules/tsparticles-particles.js/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-angle/esm/Options/Classes/RotateAnimation.js","webpack://neat_service/./node_modules/tsparticles-updater-angle/esm/Options/Classes/Rotate.js","webpack://neat_service/./node_modules/tsparticles-updater-angle/esm/RotateUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-angle/esm/index.js","webpack://neat_service/./node_modules/tsparticles-move-base/esm/Utils.js","webpack://neat_service/./node_modules/tsparticles-move-base/esm/BaseMover.js","webpack://neat_service/./node_modules/tsparticles-move-base/esm/index.js","webpack://neat_service/./node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","webpack://neat_service/./node_modules/tsparticles-shape-circle/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-color/esm/ColorUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-color/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-attract/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-bounce/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-bubble/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-connect/esm/Connector.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-connect/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-grab/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-pause/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-push/esm/Pusher.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-push/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-remove/esm/Remover.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-remove/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-repulse/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-slow/esm/Slower.js","webpack://neat_service/./node_modules/tsparticles-interaction-external-slow/esm/index.js","webpack://neat_service/./node_modules/tsparticles-shape-image/esm/Utils.js","webpack://neat_service/./node_modules/tsparticles-shape-image/esm/ImageDrawer.js","webpack://neat_service/./node_modules/tsparticles-shape-image/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","webpack://neat_service/./node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","webpack://neat_service/./node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","webpack://neat_service/./node_modules/tsparticles-updater-life/esm/LifeUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-life/esm/index.js","webpack://neat_service/./node_modules/tsparticles-shape-line/esm/LineDrawer.js","webpack://neat_service/./node_modules/tsparticles-shape-line/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-opacity/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-out-modes/esm/Utils.js","webpack://neat_service/./node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","webpack://neat_service/./node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","webpack://neat_service/./node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","webpack://neat_service/./node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","webpack://neat_service/./node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-out-modes/esm/index.js","webpack://neat_service/./node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","webpack://neat_service/./node_modules/tsparticles-move-parallax/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-attract/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-collisions/esm/index.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-links/esm/Linker.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-links/esm/interaction.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-links/esm/Utils.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-links/esm/plugin.js","webpack://neat_service/./node_modules/tsparticles-interaction-particles-links/esm/index.js","webpack://neat_service/./node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","webpack://neat_service/./node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","webpack://neat_service/./node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","webpack://neat_service/./node_modules/tsparticles-shape-polygon/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-size/esm/SizeUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-size/esm/index.js","webpack://neat_service/./node_modules/tsparticles-shape-square/esm/SquareDrawer.js","webpack://neat_service/./node_modules/tsparticles-shape-square/esm/index.js","webpack://neat_service/./node_modules/tsparticles-shape-star/esm/StarDrawer.js","webpack://neat_service/./node_modules/tsparticles-shape-star/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-stroke-color/esm/index.js","webpack://neat_service/./node_modules/tsparticles-shape-text/esm/TextDrawer.js","webpack://neat_service/./node_modules/tsparticles-shape-text/esm/index.js","webpack://neat_service/./node_modules/tsparticles-slim/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","webpack://neat_service/./node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","webpack://neat_service/./node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-tilt/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","webpack://neat_service/./node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","webpack://neat_service/./node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-twinkle/esm/index.js","webpack://neat_service/./node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js","webpack://neat_service/./node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","webpack://neat_service/./node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","webpack://neat_service/./node_modules/tsparticles-updater-wobble/esm/index.js","webpack://neat_service/./node_modules/tsparticles/esm/index.js"],"sourcesContent":["export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        var _a;\n        this.removeEventListener(type, listener);\n        if (!this._listeners.get(type)) {\n            this._listeners.set(type, []);\n        }\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.push(listener);\n    }\n    dispatchEvent(type, args) {\n        var _a;\n        (_a = this._listeners.get(type)) === null || _a === void 0 ? void 0 : _a.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","export class Vector3d {\n    constructor(xOrCoords, y, z) {\n        if (typeof xOrCoords !== \"number\" && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z !== null && z !== void 0 ? z : 0;\n        }\n        else {\n            throw new Error(\"tsParticles - Vector3d not initialized correctly\");\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (!easings.get(name)) {\n        easings.set(name, easing);\n    }\n}\nexport function getEasing(name) {\n    var _a;\n    const noEasing = (value) => value;\n    return (_a = easings.get(name)) !== null && _a !== void 0 ? _a : noEasing;\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return typeof value === \"number\" ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return typeof value === \"number\" ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return typeof value === \"number\" ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && typeof source === \"number\")) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = typeof random === \"boolean\"\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx * dx + dy * dy) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (typeof direction === \"number\") {\n        return (direction * Math.PI) / 180;\n    }\n    else {\n        switch (direction) {\n            case \"top\":\n                return -Math.PI / 2;\n            case \"top-right\":\n                return -Math.PI / 4;\n            case \"right\":\n                return 0;\n            case \"bottom-right\":\n                return Math.PI / 4;\n            case \"bottom\":\n                return Math.PI / 2;\n            case \"bottom-left\":\n                return (3 * Math.PI) / 4;\n            case \"left\":\n                return Math.PI;\n            case \"top-left\":\n                return (-3 * Math.PI) / 4;\n            case \"inside\":\n                return Math.atan2(center.y - position.y, center.x - position.x);\n            case \"outside\":\n                return Math.atan2(position.y - center.y, position.x - center.x);\n            default:\n                return getRandom() * Math.PI * 2;\n        }\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (((_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * 100) * data.size.width) / 100,\n        y: (((_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    var _a, _b, _c, _d;\n    return {\n        x: (_b = (_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : getRandom() * data.size.width,\n        y: (_d = (_c = data.position) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    var _a, _b;\n    const position = {\n        x: ((_a = data.position) === null || _a === void 0 ? void 0 : _a.x) !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: ((_b = data.position) === null || _b === void 0 ? void 0 : _b.y) !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getValue } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nfunction rectSideBounce(pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor) {\n    const res = { bounced: false };\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return res instanceof Array ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function animate() {\n    return isSsr()\n        ? (callback) => setTimeout(callback)\n        : (callback) => (requestAnimationFrame || setTimeout)(callback);\n}\nexport function cancelAnimation() {\n    return isSsr()\n        ? (handle) => clearTimeout(handle)\n        : (handle) => (cancelAnimationFrame || clearTimeout)(handle);\n}\nexport function isInArray(value, array) {\n    return value === array || (array instanceof Array && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight !== null && weight !== void 0 ? weight : \"400\"} 36px '${font !== null && font !== void 0 ? font : \"Verdana\"}'`);\n    }\n    catch (_a) {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius !== null && radius !== void 0 ? radius : 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (typeof source !== \"object\") {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (typeof destination !== \"object\" || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (typeof destination !== \"object\" || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], isObject = typeof value === \"object\", destDict = destination;\n            destDict[key] =\n                isObject && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, particle.velocity.x, getValue(particle.options.bounce.horizontal));\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        min: bounds.top,\n        max: bounds.bottom,\n    }, {\n        min: bounds.left,\n        max: bounds.right,\n    }, {\n        min: divBounds.top,\n        max: divBounds.bottom,\n    }, {\n        min: divBounds.left,\n        max: divBounds.right,\n    }, particle.velocity.y, getValue(particle.options.bounce.vertical));\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.map((item) => callback(item)) : callback(obj);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return obj instanceof Array ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return obj instanceof Array ? obj.find((t) => callback(t)) : callback(obj) ? obj : undefined;\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (color.value instanceof Array) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = typeof input === \"string\" ? { value: input } : input;\n    if (typeof color.value === \"string\") {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (color.value instanceof Array) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    var _a;\n    return (_a = stringToRgba(input)) === null || _a === void 0 ? void 0 : _a.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.b = hslPercent.l;\n        result.g = hslPercent.l;\n        result.r = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min !== null && min !== void 0 ? min : 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity !== null && opacity !== void 0 ? opacity : 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    var _a, _b;\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = (_a = p1.getFillColor()) !== null && _a !== void 0 ? _a : p1.getStrokeColor(), destColor = (_b = p2 === null || p2 === void 0 ? void 0 : p2.getFillColor()) !== null && _b !== void 0 ? _b : p2 === null || p2 === void 0 ? void 0 : p2.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor !== null && sourceColor !== void 0 ? sourceColor : destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = typeof optColor === \"string\" ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = 0;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor !== null && baseColor !== void 0 ? baseColor : \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    var _a, _b, _c, _d, _e, _f;\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * ((_a = transform.a) !== null && _a !== void 0 ? _a : 1),\n        b: rotateData.sin * ((_b = transform.b) !== null && _b !== void 0 ? _b : 1),\n        c: -rotateData.sin * ((_c = transform.c) !== null && _c !== void 0 ? _c : 1),\n        d: rotateData.cos * ((_d = transform.d) !== null && _d !== void 0 ? _d : 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const stroke = particle.stroke;\n    context.lineWidth = (_e = particle.strokeWidth) !== null && _e !== void 0 ? _e : 0;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (((_f = stroke === null || stroke === void 0 ? void 0 : stroke.width) !== null && _f !== void 0 ? _f : 0) > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!(drawer === null || drawer === void 0 ? void 0 : drawer.afterEffect)) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","export const generatedAttribute = \"generated\";\nexport const touchEndEvent = \"touchend\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchMoveEvent = \"touchmove\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { deepExtend, isSsr } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    var _a;\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = ((_a = factor[key]) !== null && _a !== void 0 ? _a : 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n        this._mutationObserver =\n            !isSsr() && typeof MutationObserver !== \"undefined\"\n                ? new MutationObserver((records) => {\n                    for (const record of records) {\n                        if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                            this._repairStyle();\n                        }\n                    }\n                })\n                : undefined;\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this._trailFillColor) {\n            this._paintBase(getStyleFromRgb(this._trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        if (this._generated) {\n            (_b = this.element) === null || _b === void 0 ? void 0 : _b.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        if (!this._context) {\n            return;\n        }\n        return cb(this._context);\n    }\n    drawParticle(particle, delta) {\n        var _a;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            var _a, _b, _c, _d, _e;\n            const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_c = (_a = particle.bubble.opacity) !== null && _a !== void 0 ? _a : (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1, strokeOpacity = (_e = (_d = particle.stroke) === null || _d === void 0 ? void 0 : _d.opacity) !== null && _e !== void 0 ? _e : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container: this.container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    init() {\n        var _a;\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        this._initTrail();\n        this.initBackground();\n        if (this.element) {\n            (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.observe(this.element, { attributes: true });\n        }\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        var _a, _b;\n        if (this._generated) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(this.element, { attributes: true });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    _applyPostDrawUpdaters(particle) {\n        var _a;\n        for (const updater of this._postDrawUpdaters) {\n            (_a = updater.afterDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform) {\n        var _a;\n        for (const updater of this._preDrawUpdaters) {\n            if (updater.getColorStyles) {\n                const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                if (fill) {\n                    colorStyles.fill = fill;\n                }\n                if (stroke) {\n                    colorStyles.stroke = stroke;\n                }\n            }\n            if (updater.getTransformValues) {\n                const updaterTransform = updater.getTransformValues(particle);\n                for (const key in updaterTransform) {\n                    setTransformValue(transform, updaterTransform, key);\n                }\n            }\n            (_a = updater.beforeDraw) === null || _a === void 0 ? void 0 : _a.call(updater, particle);\n        }\n    }\n    _applyResizePlugins() {\n        for (const plugin of this._resizePlugins) {\n            if (plugin.resize) {\n                plugin.resize();\n            }\n        }\n    }\n    _getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const plugin of this._colorPlugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    _initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    _initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        if (this._fullScreen) {\n            this._originalStyle = deepExtend({}, element.style);\n            this._setFullScreenStyle();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    _initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this._trailFillColor = Object.assign(Object.assign({}, fillColor), { a: 1 / trail.length });\n        }\n    }\n    _paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n    _repairStyle() {\n        var _a, _b;\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        (_a = this._mutationObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this._initStyle();\n        this.initBackground();\n        (_b = this._mutationObserver) === null || _b === void 0 ? void 0 : _b.observe(element, { attributes: true });\n    }\n    _resetOriginalStyle() {\n        const element = this.element, originalStyle = this._originalStyle;\n        if (!(element && originalStyle)) {\n            return;\n        }\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n    }\n    _setFullScreenStyle() {\n        const element = this.element;\n        if (!element) {\n            return;\n        }\n        const priority = \"important\";\n        element.style.setProperty(\"position\", \"fixed\", priority);\n        element.style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n        element.style.setProperty(\"top\", \"0\", priority);\n        element.style.setProperty(\"left\", \"0\", priority);\n        element.style.setProperty(\"width\", \"100%\", priority);\n        element.style.setProperty(\"height\", \"100%\", priority);\n    }\n}\n","import { executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (typeof options === \"boolean\") {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this.canPush = true;\n        this.mouseMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchStartHandler = (e) => this.mouseTouchMove(e);\n        this.touchMoveHandler = (e) => this.mouseTouchMove(e);\n        this.touchEndHandler = () => this.mouseTouchFinish();\n        this.mouseLeaveHandler = () => this.mouseTouchFinish();\n        this.touchCancelHandler = () => this.mouseTouchFinish();\n        this.touchEndClickHandler = (e) => this.mouseTouchClick(e);\n        this.mouseUpHandler = (e) => this.mouseTouchClick(e);\n        this.mouseDownHandler = () => this.mouseDown();\n        this.visibilityChangeHandler = () => this.handleVisibilityChange();\n        this.themeChangeHandler = (e) => this.handleThemeChange(e);\n        this.oldThemeChangeHandler = (e) => this.handleThemeChange(e);\n        this.resizeHandler = () => this.handleWindowResize();\n    }\n    addListeners() {\n        this.manageListeners(true);\n    }\n    removeListeners() {\n        this.manageListeners(false);\n    }\n    doMouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions;\n        if (this.canPush) {\n            const mousePos = container.interactivity.mouse.position;\n            if (!mousePos) {\n                return;\n            }\n            container.interactivity.mouse.clickPosition = Object.assign({}, mousePos);\n            container.interactivity.mouse.clickTime = new Date().getTime();\n            const onClick = options.interactivity.events.onClick;\n            executeOnSingleOrMultiple(onClick.mode, (mode) => this.handleClickMode(mode));\n        }\n        if (e.type === \"touchend\") {\n            setTimeout(() => this.mouseTouchFinish(), 500);\n        }\n    }\n    handleClickMode(mode) {\n        this.container.handleClickMode(mode);\n    }\n    handleThemeChange(e) {\n        const mediaEvent = e, themeName = mediaEvent.matches\n            ? this.container.options.defaultThemes.dark\n            : this.container.options.defaultThemes.light, theme = this.container.options.themes.find((theme) => theme.name === themeName);\n        if (theme && theme.default.auto) {\n            this.container.loadTheme(themeName);\n        }\n    }\n    handleVisibilityChange() {\n        const container = this.container, options = container.actualOptions;\n        this.mouseTouchFinish();\n        if (!options.pauseOnBlur) {\n            return;\n        }\n        if (document === null || document === void 0 ? void 0 : document.hidden) {\n            container.pageHidden = true;\n            container.pause();\n        }\n        else {\n            container.pageHidden = false;\n            if (container.getAnimationStatus()) {\n                container.play(true);\n            }\n            else {\n                container.draw(true);\n            }\n        }\n    }\n    handleWindowResize() {\n        if (this.resizeTimeout) {\n            clearTimeout(this.resizeTimeout);\n            delete this.resizeTimeout;\n        }\n        this.resizeTimeout = setTimeout(async () => { var _a; return (_a = this.container.canvas) === null || _a === void 0 ? void 0 : _a.windowResize(); }, 500);\n    }\n    manageListeners(add) {\n        var _a;\n        const container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn;\n        let mouseLeaveTmpEvent = mouseLeaveEvent;\n        if (detectType === \"window\") {\n            container.interactivity.element = window;\n            mouseLeaveTmpEvent = mouseOutEvent;\n        }\n        else if (detectType === \"parent\" && container.canvas.element) {\n            const canvasEl = container.canvas.element;\n            container.interactivity.element = (_a = canvasEl.parentElement) !== null && _a !== void 0 ? _a : canvasEl.parentNode;\n        }\n        else {\n            container.interactivity.element = container.canvas.element;\n        }\n        const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n        if (mediaMatch) {\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", this.themeChangeHandler, add);\n            }\n            else if (mediaMatch.addListener !== undefined) {\n                if (add) {\n                    mediaMatch.addListener(this.oldThemeChangeHandler);\n                }\n                else {\n                    mediaMatch.removeListener(this.oldThemeChangeHandler);\n                }\n            }\n        }\n        const interactivityEl = container.interactivity.element;\n        if (!interactivityEl) {\n            return;\n        }\n        const html = interactivityEl;\n        if (options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable) {\n            manageListener(interactivityEl, mouseMoveEvent, this.mouseMoveHandler, add);\n            manageListener(interactivityEl, touchStartEvent, this.touchStartHandler, add);\n            manageListener(interactivityEl, touchMoveEvent, this.touchMoveHandler, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, this.touchEndHandler, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, this.touchEndClickHandler, add);\n                manageListener(interactivityEl, mouseUpEvent, this.mouseUpHandler, add);\n                manageListener(interactivityEl, mouseDownEvent, this.mouseDownHandler, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, this.mouseLeaveHandler, add);\n            manageListener(interactivityEl, touchCancelEvent, this.touchCancelHandler, add);\n        }\n        if (container.canvas.element) {\n            container.canvas.element.style.pointerEvents = html === container.canvas.element ? \"initial\" : \"none\";\n        }\n        if (options.interactivity.events.resize) {\n            if (typeof ResizeObserver !== \"undefined\") {\n                if (this.resizeObserver && !add) {\n                    if (container.canvas.element) {\n                        this.resizeObserver.unobserve(container.canvas.element);\n                    }\n                    this.resizeObserver.disconnect();\n                    delete this.resizeObserver;\n                }\n                else if (!this.resizeObserver && add && container.canvas.element) {\n                    this.resizeObserver = new ResizeObserver((entries) => {\n                        const entry = entries.find((e) => e.target === container.canvas.element);\n                        if (!entry) {\n                            return;\n                        }\n                        this.handleWindowResize();\n                    });\n                    this.resizeObserver.observe(container.canvas.element);\n                }\n            }\n            else {\n                manageListener(window, resizeEvent, this.resizeHandler, add);\n            }\n        }\n        if (document) {\n            manageListener(document, visibilityChangeEvent, this.visibilityChangeHandler, add, false);\n        }\n    }\n    mouseDown() {\n        const interactivity = this.container.interactivity;\n        if (interactivity) {\n            const mouse = interactivity.mouse;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        }\n    }\n    mouseTouchClick(e) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse;\n        mouse.inside = true;\n        let handled = false;\n        const mousePosition = mouse.position;\n        if (!mousePosition || !options.interactivity.events.onClick.enable) {\n            return;\n        }\n        for (const [, plugin] of container.plugins) {\n            if (!plugin.clickPositionValid) {\n                continue;\n            }\n            handled = plugin.clickPositionValid(mousePosition);\n            if (handled) {\n                break;\n            }\n        }\n        if (!handled) {\n            this.doMouseTouchClick(e);\n        }\n        mouse.clicking = false;\n    }\n    mouseTouchFinish() {\n        const interactivity = this.container.interactivity;\n        if (!interactivity) {\n            return;\n        }\n        const mouse = interactivity.mouse;\n        delete mouse.position;\n        delete mouse.clickPosition;\n        delete mouse.downPosition;\n        interactivity.status = mouseLeaveEvent;\n        mouse.inside = false;\n        mouse.clicking = false;\n    }\n    mouseTouchMove(e) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const container = this.container, options = container.actualOptions;\n        if (!((_a = container.interactivity) === null || _a === void 0 ? void 0 : _a.element)) {\n            return;\n        }\n        container.interactivity.mouse.inside = true;\n        let pos;\n        const canvas = container.canvas.element;\n        if (e.type.startsWith(\"pointer\")) {\n            this.canPush = true;\n            const mouseEvent = e;\n            if (container.interactivity.element === window) {\n                if (canvas) {\n                    const clientRect = canvas.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.clientX - clientRect.left,\n                        y: mouseEvent.clientY - clientRect.top,\n                    };\n                }\n            }\n            else if (options.interactivity.detectsOn === \"parent\") {\n                const source = mouseEvent.target, target = mouseEvent.currentTarget, canvasEl = container.canvas.element;\n                if (source && target && canvasEl) {\n                    const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                        y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                    };\n                }\n                else {\n                    pos = {\n                        x: (_b = mouseEvent.offsetX) !== null && _b !== void 0 ? _b : mouseEvent.clientX,\n                        y: (_c = mouseEvent.offsetY) !== null && _c !== void 0 ? _c : mouseEvent.clientY,\n                    };\n                }\n            }\n            else if (mouseEvent.target === container.canvas.element) {\n                pos = {\n                    x: (_d = mouseEvent.offsetX) !== null && _d !== void 0 ? _d : mouseEvent.clientX,\n                    y: (_e = mouseEvent.offsetY) !== null && _e !== void 0 ? _e : mouseEvent.clientY,\n                };\n            }\n        }\n        else {\n            this.canPush = e.type !== \"touchmove\";\n            const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvas === null || canvas === void 0 ? void 0 : canvas.getBoundingClientRect();\n            pos = {\n                x: lastTouch.clientX - ((_f = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.left) !== null && _f !== void 0 ? _f : 0),\n                y: lastTouch.clientY - ((_g = canvasRect === null || canvasRect === void 0 ? void 0 : canvasRect.top) !== null && _g !== void 0 ? _g : 0),\n            };\n        }\n        const pxRatio = container.retina.pixelRatio;\n        if (pos) {\n            pos.x *= pxRatio;\n            pos.y *= pxRatio;\n        }\n        container.interactivity.mouse.position = pos;\n        container.interactivity.status = mouseMoveEvent;\n    }\n}\n","function initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nexport class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (!container.smooth &&\n                container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const delta = initDelta(timestamp - container.lastFrameTime, container.fpsLimit, container.smooth);\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (delta.value > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n","export class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if ((data === null || data === void 0 ? void 0 : data.value) === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (typeof data.cover === \"string\" ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        const ids = (_b = (_a = data.ids) !== null && _a !== void 0 ? _a : data.elementId) !== null && _b !== void 0 ? _b : data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","import { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = true;\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.onClick.load((_a = data.onClick) !== null && _a !== void 0 ? _a : data.onclick);\n        const onDiv = (_b = data.onDiv) !== null && _b !== void 0 ? _b : data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load((_c = data.onHover) !== null && _c !== void 0 ? _c : data.onhover);\n        if (data.resize !== undefined) {\n            this.resize = data.resize;\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (this._container) {\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadModeOptions) {\n                        interactor.loadModeOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const detectsOn = (_a = data.detectsOn) !== null && _a !== void 0 ? _a : data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.position !== undefined) {\n            this.position = {\n                x: (_a = data.position.x) !== null && _a !== void 0 ? _a : 50,\n                y: (_b = data.position.y) !== null && _b !== void 0 ? _b : 50,\n            };\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (typeof data === \"string\" || data instanceof Array) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { Random } from \"./Random\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (typeof data.random === \"boolean\") {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = (_b = (_a = data.rotate) === null || _a === void 0 ? void 0 : _a.x) !== null && _b !== void 0 ? _b : data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = (_d = (_c = data.rotate) === null || _c === void 0 ? void 0 : _c.y) !== null && _d !== void 0 ? _d : data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fillColor = new OptionsColor();\n        this.fillColor.value = \"#000000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.fillColor = OptionsColor.create(this.fillColor, data.fillColor);\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        var _a, _b, _c, _d;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = (_a = data.bottom) !== null && _a !== void 0 ? _a : data.default;\n        this.left = (_b = data.left) !== null && _b !== void 0 ? _b : data.default;\n        this.right = (_c = data.right) !== null && _c !== void 0 ? _c : data.default;\n        this.top = (_d = data.top) !== null && _d !== void 0 ? _d : data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.position = data.position ? deepExtend({}, data.position) : undefined;\n    }\n}\n","import { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        this.angle.load(typeof data.angle === \"number\" ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : Object.assign({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = (_b = (_a = data.outModes) !== null && _a !== void 0 ? _a : data.outMode) !== null && _b !== void 0 ? _b : data.out_mode;\n        if (outModes !== undefined) {\n            if (typeof outModes === \"object\") {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { AnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 2;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.opacity_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.area = 800;\n        this.factor = 1000;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const area = (_a = data.area) !== null && _a !== void 0 ? _a : data.value_area;\n        if (area !== undefined) {\n            this.area = area;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 100;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = (_a = data.limit) !== null && _a !== void 0 ? _a : data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        var _a;\n        return ((_a = this.options[charKey]) !== null && _a !== void 0 ? _a : this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        var _a;\n        return ((_a = this.options[imageKey]) !== null && _a !== void 0 ? _a : this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        var _a;\n        return ((_a = this.options[polygonKey]) !== null && _a !== void 0 ? _a : this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (!data) {\n            return;\n        }\n        const options = (_a = data.options) !== null && _a !== void 0 ? _a : data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend((_b = this.options[shape]) !== null && _b !== void 0 ? _b : {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape((_c = data.image) !== null && _c !== void 0 ? _c : data.images, imageKey, imageAltKey, true);\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n    loadShape(item, mainKey, altKey, altOverride) {\n        var _a, _b;\n        if (!item) {\n            return;\n        }\n        const isArray = item instanceof Array;\n        const emptyValue = isArray ? [] : {}, mainDifferentValues = isArray !== this.options[mainKey] instanceof Array, altDifferentValues = isArray !== this.options[altKey] instanceof Array;\n        if (mainDifferentValues) {\n            this.options[mainKey] = emptyValue;\n        }\n        if (altDifferentValues && altOverride) {\n            this.options[altKey] = emptyValue;\n        }\n        this.options[mainKey] = deepExtend((_a = this.options[mainKey]) !== null && _a !== void 0 ? _a : emptyValue, item);\n        if (!this.options[altKey] || altOverride) {\n            this.options[altKey] = deepExtend((_b = this.options[altKey]) !== null && _b !== void 0 ? _b : emptyValue, item);\n        }\n    }\n}\n","import { AnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends AnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.enable = false;\n        this.speed = 5;\n        this.startValue = \"random\";\n        this.sync = false;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.minimumValue = (_a = data.minimumValue) !== null && _a !== void 0 ? _a : data.size_min;\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        var _a;\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = (_a = data.animation) !== null && _a !== void 0 ? _a : data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend((_a = this.groups[group]) !== null && _a !== void 0 ? _a : {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = (_c = (_b = data.move) === null || _b === void 0 ? void 0 : _b.collisions) !== null && _c !== void 0 ? _c : (_d = data.move) === null || _d === void 0 ? void 0 : _d.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = (_e = data.stroke) !== null && _e !== void 0 ? _e : (_f = data.shape) === null || _f === void 0 ? void 0 : _f.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        var _a, _b, _c, _d, _e;\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = (_a = data.detectRetina) !== null && _a !== void 0 ? _a : data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = (_b = data.fpsLimit) !== null && _b !== void 0 ? _b : data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = (_c = data.fullScreen) !== null && _c !== void 0 ? _c : data.backgroundMode;\n        if (typeof fullScreen === \"boolean\") {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles !== undefined) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const optTheme = new Theme();\n                optTheme.load(theme);\n                this.themes.push(optTheme);\n            }\n        }\n        this.defaultThemes.dark = (_d = this._findDefaultTheme(\"dark\")) === null || _d === void 0 ? void 0 : _d.name;\n        this.defaultThemes.light = (_e = this._findDefaultTheme(\"light\")) === null || _e === void 0 ? void 0 : _e.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.options);\n        return responsiveOptions === null || responsiveOptions === void 0 ? void 0 : responsiveOptions.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n    _findDefaultTheme(mode) {\n        var _a;\n        return ((_a = this.themes.find((theme) => theme.default.value && theme.default.mode === mode)) !== null && _a !== void 0 ? _a : this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n    }\n    _importPreset(preset) {\n        this.load(this._engine.plugins.getPreset(preset));\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = this._engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.interact(delta);\n            }\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.handleClickMode) {\n                interactor.handleClickMode(mode);\n            }\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case 0:\n                    this._externalInteractors.push(interactor);\n                    break;\n                case 1:\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.interact(particle, delta);\n            }\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            if (interactor.isEnabled()) {\n                await interactor.reset(particle);\n            }\n        }\n        for (const interactor of this._particleInteractors) {\n            if (interactor.isEnabled(particle)) {\n                await interactor.reset(particle);\n            }\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, isInArray, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    if (data.coord > data.maxCoord - data.radius * 2) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < data.radius * 2) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of this.container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        var _a, _b;\n        const color = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.color);\n        if (color && this.roll && (this.backColor || this.roll.alter)) {\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor((((_b = this.roll.angle) !== null && _b !== void 0 ? _b : 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (rolled) {\n                if (this.backColor) {\n                    return this.backColor;\n                }\n                if (this.roll.alter) {\n                    return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n                }\n            }\n        }\n        return color;\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        var _a;\n        return (_a = this.bubble.radius) !== null && _a !== void 0 ? _a : this.size.value;\n    }\n    getStrokeColor() {\n        var _a, _b;\n        return (_b = (_a = this.bubble.color) !== null && _a !== void 0 ? _a : getHslFromAnimation(this.strokeColor)) !== null && _b !== void 0 ? _b : this.getFillColor();\n    }\n    init(id, position, overrideOptions, group) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        particlesOptions.load((_a = this.shapeData) === null || _a === void 0 ? void 0 : _a.particles);\n        this.interactivity = new Interactivity(engine, container);\n        this.interactivity.load(container.actualOptions.interactivity);\n        this.interactivity.load(particlesOptions.interactivity);\n        this.fill = (_c = (_b = this.shapeData) === null || _b === void 0 ? void 0 : _b.fill) !== null && _c !== void 0 ? _c : this.fill;\n        this.close = (_e = (_d = this.shapeData) === null || _d === void 0 ? void 0 : _d.close) !== null && _e !== void 0 ? _e : this.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        const zIndexValue = getRangeValue(this.options.zIndex.value);\n        container.retina.initParticle(this);\n        const sizeOptions = this.options.size, sizeRange = sizeOptions.value, sizeAnimation = sizeOptions.animation;\n        this.size = {\n            enable: sizeOptions.animation.enable,\n            value: getRangeValue(sizeOptions.value) * container.retina.pixelRatio,\n            max: getRangeMax(sizeRange) * pxRatio,\n            min: getRangeMin(sizeRange) * pxRatio,\n            loops: 0,\n            maxLoops: getRangeValue(sizeOptions.animation.count),\n        };\n        if (sizeAnimation.enable) {\n            this.size.status = 0;\n            this.size.decay = 1 - getRangeValue(sizeAnimation.decay);\n            switch (sizeAnimation.startValue) {\n                case \"min\":\n                    this.size.value = this.size.min;\n                    this.size.status = 0;\n                    break;\n                case \"random\":\n                    this.size.value = randomInRange(this.size) * pxRatio;\n                    this.size.status = getRandom() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    this.size.value = this.size.max;\n                    this.size.status = 1;\n                    break;\n            }\n        }\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n        this.initialPosition = this.position.copy();\n        const canvasSize = container.canvas.size, moveCenter = Object.assign({}, this.options.move.center), isCenterPercent = moveCenter.mode === \"percent\";\n        this.moveCenter = {\n            x: moveCenter.x * (isCenterPercent ? canvasSize.width / 100 : 1),\n            y: moveCenter.y * (isCenterPercent ? canvasSize.height / 100 : 1),\n            radius: (_f = this.options.move.center.radius) !== null && _f !== void 0 ? _f : 0,\n            mode: (_g = this.options.move.center.mode) !== null && _g !== void 0 ? _g : \"percent\",\n        };\n        this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n        switch (this.options.move.direction) {\n            case \"inside\":\n                this.outType = \"inside\";\n                break;\n            case \"outside\":\n                this.outType = \"outside\";\n                break;\n        }\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        this.offset = Vector.origin;\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.loadShape) {\n            drawer === null || drawer === void 0 ? void 0 : drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer === null || drawer === void 0 ? void 0 : drawer.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            (_h = mover.init) === null || _h === void 0 ? void 0 : _h.call(mover, this);\n        }\n        if (drawer === null || drawer === void 0 ? void 0 : drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            (_j = plugin.particleCreated) === null || _j === void 0 ? void 0 : _j.call(plugin, this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size;\n        return (this.position.x >= -radius &&\n            this.position.y >= -radius &&\n            this.position.y <= canvasSize.height + radius &&\n            this.position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        var _a;\n        for (const updater of this.container.particles.updaters) {\n            (_a = updater.reset) === null || _a === void 0 ? void 0 : _a.call(updater, this);\n        }\n    }\n    _calcPosition(container, position, zIndex, tryCount = 0) {\n        var _a, _b, _c, _d;\n        for (const [, plugin] of container.plugins) {\n            const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n            if (pluginPos !== undefined) {\n                return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n            }\n        }\n        const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n            size: canvasSize,\n            position: position,\n        }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-horizontal\"],\n                coord: pos.x,\n                maxCoord: container.canvas.size.width,\n                setCb: (value) => (pos.x += value),\n                radius,\n            });\n        }, fixVertical = (outMode) => {\n            fixOutMode({\n                outMode,\n                checkModes: [\"bounce\", \"bounce-vertical\"],\n                coord: pos.y,\n                maxCoord: container.canvas.size.height,\n                setCb: (value) => (pos.y += value),\n                radius,\n            });\n        };\n        fixHorizontal((_a = outModes.left) !== null && _a !== void 0 ? _a : outModes.default);\n        fixHorizontal((_b = outModes.right) !== null && _b !== void 0 ? _b : outModes.default);\n        fixVertical((_c = outModes.top) !== null && _c !== void 0 ? _c : outModes.default);\n        fixVertical((_d = outModes.bottom) !== null && _d !== void 0 ? _d : outModes.default);\n        if (this._checkOverlap(pos, tryCount)) {\n            return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n        }\n        return pos;\n    }\n    _calculateVelocity() {\n        const baseVelocity = getParticleBaseVelocity(this.direction);\n        const res = baseVelocity.copy();\n        const moveOptions = this.options.move;\n        if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n            return res;\n        }\n        const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n            left: radOffset - rad / 2,\n            right: radOffset + rad / 2,\n        };\n        if (!moveOptions.straight) {\n            res.angle += randomInRange(setRangeValue(range.left, range.right));\n        }\n        if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n            res.length *= getRandom();\n        }\n        return res;\n    }\n    _checkOverlap(pos, tryCount = 0) {\n        const collisionsOptions = this.options.collisions, radius = this.getRadius();\n        if (!collisionsOptions.enable) {\n            return false;\n        }\n        const overlapOptions = collisionsOptions.overlap;\n        if (overlapOptions.enable) {\n            return false;\n        }\n        const retries = overlapOptions.retries;\n        if (retries >= 0 && tryCount > retries) {\n            throw new Error(\"Particle is overlapping and can't be placed\");\n        }\n        let overlaps = false;\n        for (const particle of this.container.particles.array) {\n            if (getDistance(pos, particle.position) < radius + particle.getRadius()) {\n                overlaps = true;\n                break;\n            }\n        }\n        return overlaps;\n    }\n    _loadShapeData(shapeOptions, reduceDuplicates) {\n        const shapeData = shapeOptions.options[this.shape];\n        if (shapeData) {\n            return deepExtend({}, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Range } from \"./Range\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const rect = range, circle = range, pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (circle.radius !== undefined) {\n            const rSum = r + circle.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (rect.size !== undefined) {\n            const w = rect.size.width, h = rect.size.height, edges = Math.pow(distPos.x - w, 2) + Math.pow(distPos.y - h, 2);\n            return edges <= r ** 2 || (distPos.x <= r + w && distPos.y <= r + h) || distPos.x <= w || distPos.y <= h;\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._points = [];\n        this._divided = false;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this._NE) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this._NW) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this._SE) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this._SW) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    query(range, check, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            (_a = this._NE) === null || _a === void 0 ? void 0 : _a.query(range, check, res);\n            (_b = this._NW) === null || _b === void 0 ? void 0 : _b.query(range, check, res);\n            (_c = this._SE) === null || _c === void 0 ? void 0 : _c.query(range, check, res);\n            (_d = this._SW) === null || _d === void 0 ? void 0 : _d.query(range, check, res);\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n    subdivide() {\n        const x = this.rectangle.position.x, y = this.rectangle.position.y, w = this.rectangle.size.width, h = this.rectangle.size.height, capacity = this.capacity;\n        this._NE = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this._NW = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this._SE = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this._SW = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this._divided = true;\n    }\n}\n","import { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { calcPositionFromSize } from \"../Utils/NumberUtils\";\nexport class Particles {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.nextId = 0;\n        this.array = [];\n        this.zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this.interactionManager = new InteractionManager(this._engine, container);\n        const canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this.array.length;\n    }\n    addManualParticles() {\n        const container = this.container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(calcPositionFromSize({\n                size: container.canvas.size,\n                position: particle.position,\n            }), particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this.container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this.array = [];\n        this.zArray = [];\n    }\n    destroy() {\n        this.array = [];\n        this.zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this.container, canvasSize = this.container.canvas.size;\n        this.quadTree = new QuadTree(new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2), 4);\n        container.canvas.clear();\n        await this.update(delta);\n        if (this.needsSort) {\n            this.zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = this.zArray[this.zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this.zArray) {\n            p.draw(delta);\n        }\n    }\n    handleClickMode(mode) {\n        this.interactionManager.handleClickMode(mode);\n    }\n    init() {\n        var _a;\n        const container = this.container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this.interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this.interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < ((_a = groupOptions.number) === null || _a === void 0 ? void 0 : _a.value) && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse === null || mouse === void 0 ? void 0 : mouse.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this.array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            const particle = this.array[i];\n            if (!particle || particle.group !== group) {\n                continue;\n            }\n            particle.destroy(override);\n            this.array.splice(i--, 1);\n            const zIdx = this.zArray.indexOf(particle);\n            this.zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            deleted++;\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this.container.actualOptions;\n        for (const group in options.particles.groups) {\n            this._applyDensity(options.particles.groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        var _a, _b;\n        const container = this.container, particlesToDelete = [];\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            (_a = plugin.update) === null || _a === void 0 ? void 0 : _a.call(plugin, delta);\n        }\n        for (const particle of this.array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this.interactionManager.reset(particle);\n            for (const [, plugin] of this.container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                (_b = plugin.particleUpdate) === null || _b === void 0 ? void 0 : _b.call(plugin, particle, delta);\n            }\n            for (const mover of this.movers) {\n                if (mover.isEnabled(particle)) {\n                    mover.move(particle, delta);\n                }\n            }\n            if (particle.destroyed) {\n                particlesToDelete.push(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        for (const particle of particlesToDelete) {\n            this.remove(particle);\n        }\n        await this.interactionManager.externalInteract(delta);\n        for (const particle of this.array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this.interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n    }\n    _applyDensity(options, manualCount, group) {\n        var _a;\n        if (!((_a = options.number.density) === null || _a === void 0 ? void 0 : _a.enable)) {\n            return;\n        }\n        const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.array.filter((t) => t.group === group).length);\n        this.limit = numberOptions.limit * densityFactor;\n        if (particlesCount < particlesNumber) {\n            this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n        }\n        else if (particlesCount > particlesNumber) {\n            this.removeQuantity(particlesCount - particlesNumber, group);\n        }\n    }\n    _initDensityFactor(densityOptions) {\n        const container = this.container;\n        if (!container.canvas.element || !densityOptions.enable) {\n            return 1;\n        }\n        const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n        return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n    }\n    _pushParticle(position, overrideOptions, group, initializer) {\n        try {\n            let particle = this.pool.pop();\n            if (particle) {\n                particle.init(this.nextId, position, overrideOptions, group);\n            }\n            else {\n                particle = new Particle(this._engine, this.nextId, this.container, position, overrideOptions, group);\n            }\n            let canAdd = true;\n            if (initializer) {\n                canAdd = initializer(particle);\n            }\n            if (!canAdd) {\n                return;\n            }\n            this.array.push(particle);\n            this.zArray.push(particle);\n            this.nextId++;\n            this._engine.dispatchEvent(\"particleAdded\", {\n                container: this.container,\n                data: {\n                    particle,\n                },\n            });\n            return particle;\n        }\n        catch (e) {\n            console.warn(`error adding particle: ${e}`);\n            return;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles;\n        this.attractDistance = getRangeValue(particles.move.attract.distance) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n        this.maxSpeed = getRangeValue(particles.move.gravity.maxSpeed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveDistance = options.move.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(options.move.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(options.move.drift) * ratio;\n        props.moveSpeed = getRangeValue(options.move.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(options.move.gravity.maxSpeed) * ratio;\n    }\n}\n","import { animate, cancelAnimation } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { FrameManager } from \"./Utils/FrameManager\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => {\n        const v = p.velocity.copy();\n        v.angle += (v.length * Math.PI) / 180;\n        return v;\n    },\n    init: () => {\n    },\n    update: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this.duration = 0;\n        this.lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.frameManager = new FrameManager(this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator !== null && generator !== void 0 ? generator : defaultPathGenerator);\n        return true;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            if (drawer.destroy) {\n                drawer.destroy(this);\n            }\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = animate()(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this.frameManager.nextFrame(timestamp);\n        });\n    }\n    exportConfiguration() {\n        return JSON.stringify(this.actualOptions, (key, value) => {\n            if (key === \"_engine\" || key === \"_container\") {\n                return;\n            }\n            return value;\n        }, 2);\n    }\n    exportImage(callback, type, quality) {\n        const element = this.canvas.element;\n        if (element) {\n            element.toBlob(callback, type !== null && type !== void 0 ? type : \"image/png\", quality);\n        }\n    }\n    exportImg(callback) {\n        this.exportImage(callback);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            if (plugin.handleClickMode) {\n                plugin.handleClickMode(mode);\n            }\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this.duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this.lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            if (drawer.init) {\n                await drawer.init(this);\n            }\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.init) {\n                await plugin.init();\n            }\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            if (plugin.particlesSetup) {\n                plugin.particlesSetup();\n            }\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimation()(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.pause) {\n                plugin.pause();\n            }\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._options = loadContainerOptions(this._engine, this);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = Object.assign({}, defaultPathGenerator);\n        if (typeof pathOrGenerator === \"function\") {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    if (plugin.start) {\n                        await plugin.start();\n                    }\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.clear();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            if (plugin.stop) {\n                plugin.stop();\n            }\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n    _intersectionManager(entries) {\n        if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n            return;\n        }\n        for (const entry of entries) {\n            if (entry.target !== this.interactivity.element) {\n                continue;\n            }\n            (entry.isIntersecting ? this.play : this.pause)();\n        }\n    }\n}\n","import { Container } from \"./Container\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nimport { itemFromSingleOrMultiple } from \"../Utils/Utils\";\nfunction fetchError(statusCode) {\n    console.error(`tsParticles - Error ${statusCode} while retrieving config file`);\n}\nasync function getDataFromUrl(jsonUrl, index) {\n    const url = itemFromSingleOrMultiple(jsonUrl, index);\n    if (!url) {\n        return;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    fetchError(response.status);\n}\nexport class Loader {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    load(tagId, options, index) {\n        const params = { index, remote: false };\n        if (typeof tagId === \"string\") {\n            params.tagId = tagId;\n        }\n        else {\n            params.options = tagId;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async loadJSON(tagId, jsonUrl, index) {\n        let url, id;\n        if (typeof jsonUrl === \"number\" || jsonUrl === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = jsonUrl;\n        }\n        return this.loadRemoteOptions({ tagId: id, url, index, remote: true });\n    }\n    async loadOptions(params) {\n        var _a, _b, _c;\n        const tagId = (_a = params.tagId) !== null && _a !== void 0 ? _a : `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url: jsonUrl, remote } = params, options = remote ? await getDataFromUrl(jsonUrl, index) : params.options;\n        let domContainer = (_b = params.element) !== null && _b !== void 0 ? _b : document.getElementById(tagId);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = tagId;\n            (_c = document.querySelector(\"body\")) === null || _c === void 0 ? void 0 : _c.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this._engine.dom(), oldIndex = dom.findIndex((v) => v.id === tagId);\n        if (oldIndex >= 0) {\n            const old = this._engine.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this._engine, tagId, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n    async loadRemoteOptions(params) {\n        return this.loadOptions(params);\n    }\n    async set(id, domContainer, options, index) {\n        const params = { index, remote: false };\n        if (typeof id === \"string\") {\n            params.tagId = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (domContainer instanceof HTMLElement) {\n            params.element = domContainer;\n        }\n        else {\n            params.options = domContainer;\n        }\n        if (typeof options === \"number\") {\n            params.index = options;\n        }\n        else {\n            params.options = options !== null && options !== void 0 ? options : params.options;\n        }\n        return this.loadOptions(params);\n    }\n    async setJSON(id, domContainer, jsonUrl, index) {\n        let url, newId, newIndex, element;\n        if (id instanceof HTMLElement) {\n            element = id;\n            url = domContainer;\n            newIndex = jsonUrl;\n        }\n        else {\n            newId = id;\n            element = domContainer;\n            url = jsonUrl;\n            newIndex = index;\n        }\n        return this.loadRemoteOptions({ tagId: newId, url, index: newIndex, element, remote: true });\n    }\n}\n","function getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        if (!this.getPathGenerator(type)) {\n            this.pathGenerators.set(type, pathGenerator);\n        }\n    }\n    addPlugin(plugin) {\n        if (!this.getPlugin(plugin.id)) {\n            this.plugins.push(plugin);\n        }\n    }\n    addPreset(presetKey, options, override = false) {\n        if (override || !this.getPreset(presetKey)) {\n            this.presets.set(presetKey, options);\n        }\n    }\n    addShapeDrawer(type, drawer) {\n        if (!this.getShapeDrawer(type)) {\n            this.drawers.set(type, drawer);\n        }\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            if (!plugin.needsPlugin(container.actualOptions)) {\n                continue;\n            }\n            res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            if (updater.loadOptions) {\n                updater.loadOptions(options, ...sourceOptions);\n            }\n        }\n    }\n}\n","import { EventDispatcher } from \"./Utils/EventDispatcher\";\nimport { Loader } from \"./Core/Loader\";\nimport { Plugins } from \"./Core/Utils/Plugins\";\nexport class Engine {\n    constructor() {\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this._loader = new Loader(this);\n        this.plugins = new Plugins(this);\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh();\n    }\n    async addMover(name, moverInitializer) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh();\n    }\n    async addParticleUpdater(name, updaterInitializer) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh();\n    }\n    async addPathGenerator(name, generator) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh();\n    }\n    async addPlugin(plugin) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh();\n    }\n    async addPreset(preset, options, override = false) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh();\n    }\n    async addShape(shape, drawer, init, afterEffect, destroy) {\n        let customDrawer;\n        if (typeof drawer === \"function\") {\n            customDrawer = {\n                afterEffect: afterEffect,\n                destroy: destroy,\n                draw: drawer,\n                init: init,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh();\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (item && !item.destroyed) {\n            return item;\n        }\n        dom.splice(index, 1);\n    }\n    init() {\n        if (!this._initialized) {\n            this._initialized = true;\n        }\n    }\n    async load(tagId, options) {\n        return this._loader.load(tagId, options);\n    }\n    async loadFromArray(tagId, options, index) {\n        return this._loader.load(tagId, options, index);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        return this._loader.loadJSON(tagId, pathConfigJson, index);\n    }\n    async refresh() {\n        for (const instance of this.dom()) {\n            await instance.refresh();\n        }\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options) {\n        return this._loader.set(id, element, options);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        return this._loader.setJSON(id, element, pathConfigJson, index);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(\"Can only set click handlers after calling tsParticles.load() or tsParticles.loadJSON()\");\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, hslColor = (_a = colorValue.hsl) !== null && _a !== void 0 ? _a : color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        var _a;\n        const colorValue = color.value, rgbColor = (_a = colorValue.rgb) !== null && _a !== void 0 ? _a : color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = 0;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = 1;\n    }\n}\n","import { Engine } from \"./engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nconst rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\naddColorManager(rgbColorManager);\naddColorManager(hslColorManager);\nconst tsParticles = new Engine();\ntsParticles.init();\nexport * from \"./Core/Interfaces/Colors\";\nexport * from \"./Core/Interfaces/IBounds\";\nexport * from \"./Core/Interfaces/IBubbleParticleData\";\nexport * from \"./Core/Interfaces/ICircleBouncer\";\nexport * from \"./Core/Interfaces/IColorManager\";\nexport * from \"./Core/Interfaces/IContainerInteractivity\";\nexport * from \"./Core/Interfaces/IContainerPlugin\";\nexport * from \"./Core/Interfaces/ICoordinates\";\nexport * from \"./Core/Interfaces/IDelta\";\nexport * from \"./Core/Interfaces/IDimension\";\nexport * from \"./Core/Interfaces/IDistance\";\nexport * from \"./Core/Interfaces/IExternalInteractor\";\nexport * from \"./Core/Interfaces/IInteractor\";\nexport * from \"./Core/Interfaces/IMouseData\";\nexport * from \"./Core/Interfaces/IMovePathGenerator\";\nexport * from \"./Core/Interfaces/IParticle\";\nexport * from \"./Core/Interfaces/IParticleColorStyle\";\nexport * from \"./Core/Interfaces/IParticleHslAnimation\";\nexport * from \"./Core/Interfaces/IParticlesInteractor\";\nexport * from \"./Core/Interfaces/IParticleLife\";\nexport * from \"./Core/Interfaces/IParticleRetinaProps\";\nexport * from \"./Core/Interfaces/IParticleRoll\";\nexport * from \"./Core/Interfaces/IParticleTransformValues\";\nexport * from \"./Core/Interfaces/IParticleUpdater\";\nexport * from \"./Core/Interfaces/IParticleValueAnimation\";\nexport * from \"./Core/Interfaces/IParticleWobble\";\nexport * from \"./Core/Interfaces/IParticlesMover\";\nexport * from \"./Core/Interfaces/IPlugin\";\nexport * from \"./Core/Interfaces/IRangeValue\";\nexport * from \"./Core/Interfaces/IRectSideResult\";\nexport * from \"./Core/Interfaces/IShapeDrawer\";\nexport * from \"./Core/Interfaces/IShapeValues\";\nexport * from \"./Core/Interfaces/ISlowParticleData\";\nexport * from \"./Core/Utils/Circle\";\nexport * from \"./Core/Utils/Constants\";\nexport * from \"./Core/Utils/ExternalInteractorBase\";\nexport * from \"./Core/Utils/ParticlesInteractorBase\";\nexport * from \"./Core/Utils/Point\";\nexport * from \"./Core/Utils/Range\";\nexport * from \"./Core/Utils/Rectangle\";\nexport * from \"./Core/Utils/Vector\";\nexport * from \"./Core/Utils/Vector3d\";\nexport * from \"./Enums/Directions/MoveDirection\";\nexport * from \"./Enums/Directions/RotateDirection\";\nexport * from \"./Enums/Directions/OutModeDirection\";\nexport * from \"./Enums/Modes/ClickMode\";\nexport * from \"./Enums/Modes/DivMode\";\nexport * from \"./Enums/Modes/HoverMode\";\nexport * from \"./Enums/Modes/CollisionMode\";\nexport * from \"./Enums/Modes/OutMode\";\nexport * from \"./Enums/Modes/SizeMode\";\nexport * from \"./Enums/Modes/ThemeMode\";\nexport * from \"./Enums/Modes/ResponsiveMode\";\nexport * from \"./Enums/Types/AlterType\";\nexport * from \"./Enums/Types/DestroyType\";\nexport * from \"./Enums/Types/GradientType\";\nexport * from \"./Enums/Types/InteractorType\";\nexport * from \"./Enums/Types/ParticleOutType\";\nexport * from \"./Enums/Types/StartValueType\";\nexport * from \"./Enums/Types/DivType\";\nexport * from \"./Enums/Types/EasingType\";\nexport * from \"./Enums/AnimationStatus\";\nexport * from \"./Enums/InteractivityDetect\";\nexport * from \"./Options/Classes/AnimatableColor\";\nexport * from \"./Options/Classes/AnimationOptions\";\nexport * from \"./Options/Classes/Background/Background\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMask\";\nexport * from \"./Options/Classes/BackgroundMask/BackgroundMaskCover\";\nexport * from \"./Options/Classes/ColorAnimation\";\nexport * from \"./Options/Classes/FullScreen/FullScreen\";\nexport * from \"./Options/Classes/HslAnimation\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/ClickEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/DivEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Events\";\nexport * from \"./Options/Classes/Interactivity/Events/HoverEvent\";\nexport * from \"./Options/Classes/Interactivity/Events/Parallax\";\nexport * from \"./Options/Classes/Interactivity/Interactivity\";\nexport * from \"./Options/Classes/Interactivity/Modes/Modes\";\nexport * from \"./Options/Classes/ManualParticle\";\nexport * from \"./Options/Classes/Options\";\nexport * from \"./Options/Classes/OptionsColor\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounce\";\nexport * from \"./Options/Classes/Particles/Bounce/ParticlesBounceFactor\";\nexport * from \"./Options/Classes/Particles/Collisions/Collisions\";\nexport * from \"./Options/Classes/Particles/Collisions/CollisionsOverlap\";\nexport * from \"./Options/Classes/Particles/ParticlesOptions\";\nexport * from \"./Options/Classes/Particles/Shadow\";\nexport * from \"./Options/Classes/Particles/Stroke\";\nexport * from \"./Options/Classes/Particles/Move/MoveAttract\";\nexport * from \"./Options/Classes/Particles/Move/Move\";\nexport * from \"./Options/Classes/Particles/Move/MoveAngle\";\nexport * from \"./Options/Classes/Particles/Move/MoveCenter\";\nexport * from \"./Options/Classes/Particles/Move/MoveGravity\";\nexport * from \"./Options/Classes/Particles/Move/OutModes\";\nexport * from \"./Options/Classes/Particles/Move/Path/MovePath\";\nexport * from \"./Options/Classes/Particles/Move/Spin\";\nexport * from \"./Options/Classes/Particles/Move/MoveTrail\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesNumber\";\nexport * from \"./Options/Classes/Particles/Number/ParticlesDensity\";\nexport * from \"./Options/Classes/Particles/Opacity/Opacity\";\nexport * from \"./Options/Classes/Particles/Opacity/OpacityAnimation\";\nexport * from \"./Options/Classes/Particles/Shape/Shape\";\nexport * from \"./Options/Classes/Particles/Size/Size\";\nexport * from \"./Options/Classes/Particles/Size/SizeAnimation\";\nexport * from \"./Options/Classes/Particles/ZIndex/ZIndex\";\nexport * from \"./Options/Classes/Responsive\";\nexport * from \"./Options/Classes/Theme/Theme\";\nexport * from \"./Options/Classes/Theme/ThemeDefault\";\nexport * from \"./Options/Classes/ValueWithRandom\";\nexport * from \"./Options/Interfaces/Background/IBackground\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMask\";\nexport * from \"./Options/Interfaces/BackgroundMask/IBackgroundMaskCover\";\nexport * from \"./Options/Interfaces/FullScreen/IFullScreen\";\nexport * from \"./Options/Interfaces/IAnimatable\";\nexport * from \"./Options/Interfaces/IAnimatableColor\";\nexport * from \"./Options/Interfaces/IAnimation\";\nexport * from \"./Options/Interfaces/IColorAnimation\";\nexport * from \"./Options/Interfaces/IHslAnimation\";\nexport * from \"./Options/Interfaces/IManualParticle\";\nexport * from \"./Options/Interfaces/IOptionLoader\";\nexport * from \"./Options/Interfaces/IOptions\";\nexport * from \"./Options/Interfaces/IOptionsColor\";\nexport * from \"./Options/Interfaces/IResponsive\";\nexport * from \"./Options/Interfaces/IValueWithRandom\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IClickEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IDivEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IEvents\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IHoverEvent\";\nexport * from \"./Options/Interfaces/Interactivity/Events/IParallax\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModeDiv\";\nexport * from \"./Options/Interfaces/Interactivity/Modes/IModes\";\nexport * from \"./Options/Interfaces/Interactivity/IInteractivity\";\nexport * from \"./Options/Interfaces/Particles/Bounce/IParticlesBounce\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisions\";\nexport * from \"./Options/Interfaces/Particles/Collisions/ICollisionsOverlap\";\nexport * from \"./Options/Interfaces/Particles/IParticlesOptions\";\nexport * from \"./Options/Interfaces/Particles/IShadow\";\nexport * from \"./Options/Interfaces/Particles/IStroke\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAttract\";\nexport * from \"./Options/Interfaces/Particles/Move/IMove\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveAngle\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveCenter\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveGravity\";\nexport * from \"./Options/Interfaces/Particles/Move/Path/IMovePath\";\nexport * from \"./Options/Interfaces/Particles/Move/IOutModes\";\nexport * from \"./Options/Interfaces/Particles/Move/ISpin\";\nexport * from \"./Options/Interfaces/Particles/Move/IMoveTrail\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesDensity\";\nexport * from \"./Options/Interfaces/Particles/Number/IParticlesNumber\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacity\";\nexport * from \"./Options/Interfaces/Particles/Opacity/IOpacityAnimation\";\nexport * from \"./Options/Interfaces/Particles/Shape/ICharacterShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IImageShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IPolygonShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShape\";\nexport * from \"./Options/Interfaces/Particles/Shape/IShapeValues\";\nexport * from \"./Options/Interfaces/Particles/Shape/IStarShape\";\nexport * from \"./Options/Interfaces/Particles/Size/ISize\";\nexport * from \"./Options/Interfaces/Particles/Size/ISizeAnimation\";\nexport * from \"./Options/Interfaces/Particles/ZIndex/IZIndex\";\nexport * from \"./Options/Interfaces/Theme/ITheme\";\nexport * from \"./Options/Interfaces/Theme/IThemeDefault\";\nexport * from \"./Types/RangeValue\";\nexport * from \"./Types/RecursivePartial\";\nexport * from \"./Types/ShapeData\";\nexport * from \"./Types/ShapeDrawerFunctions\";\nexport * from \"./Types/SingleOrMultiple\";\nexport * from \"./Types/PathOptions\";\nexport * from \"./Utils/CanvasUtils\";\nexport * from \"./Utils/ColorUtils\";\nexport * from \"./Utils/HslColorManager\";\nexport * from \"./Utils/NumberUtils\";\nexport * from \"./Utils/OptionsUtils\";\nexport * from \"./Utils/RgbColorManager\";\nexport * from \"./Utils/Utils\";\nexport { tsParticles };\nexport { CollisionsAbsorb } from \"./Options/Classes/Particles/Collisions/CollisionsAbsorb\";\n","import { Vector, getRandom } from \"tsparticles-engine\";\nexport class PolygonPathGenerator {\n    constructor() {\n        this.dirsList = [];\n        this.options = {\n            sides: 6,\n            turnSteps: 20,\n            angle: 30,\n        };\n    }\n    generate(p) {\n        if (p.hexStep === undefined) {\n            p.hexStep = 0;\n        }\n        if (p.hexDirection === undefined) {\n            p.hexDirection =\n                this.options.sides === 6 ? ((getRandom() * 3) | 0) * 2 : (getRandom() * this.options.sides) | 0;\n        }\n        if (p.hexSpeed === undefined) {\n            p.hexSpeed = p.velocity.length;\n        }\n        if (p.hexStep % this.options.turnSteps === 0) {\n            p.hexDirection =\n                getRandom() > 0.5\n                    ? (p.hexDirection + 1) % this.options.sides\n                    : (p.hexDirection + this.options.sides - 1) % this.options.sides;\n        }\n        p.velocity.x = 0;\n        p.velocity.y = 0;\n        p.hexStep++;\n        return Vector.create(this.dirsList[p.hexDirection].x * p.hexSpeed, this.dirsList[p.hexDirection].y * p.hexSpeed);\n    }\n    init(container) {\n        var _a;\n        const options = container.actualOptions.particles.move.path.options;\n        this.options.sides = options.sides > 0 ? options.sides : 6;\n        this.options.angle = (_a = options.angle) !== null && _a !== void 0 ? _a : 30;\n        this.options.turnSteps = options.turnSteps >= 0 ? options.turnSteps : 20;\n        this.createDirs();\n    }\n    update() {\n    }\n    createDirs() {\n        this.dirsList = [];\n        for (let i = 0; i < 360; i += 360 / this.options.sides) {\n            const angle = this.options.angle + i;\n            this.dirsList.push(Vector.create(Math.cos((angle * Math.PI) / 180), Math.sin((angle * Math.PI) / 180)));\n        }\n    }\n}\n","import { PolygonPathGenerator } from \"./PolygonPathGenerator\";\nexport const polygonPathName = \"polygonPathGenerator\";\nexport function loadPolygonPath(engine) {\n    engine.addPathGenerator(polygonPathName, new PolygonPathGenerator());\n}\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (typeof data.limit === \"number\") {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        var _a, _b, _c;\n        this.absorbers = absorbers;\n        this.container = container;\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = (_a = rangeColorToRgb(this.options.color)) !== null && _a !== void 0 ? _a : {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = (_c = (_b = this.initialPosition) === null || _b === void 0 ? void 0 : _b.copy()) !== null && _c !== void 0 ? _c : this.calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this.updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this.updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this.updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    calcPosition() {\n        const exactPosition = calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n        return Vector.create(exactPosition.x, exactPosition.y);\n    }\n    updateParticlePosition(particle, v) {\n        var _a;\n        if (particle.destroyed) {\n            return;\n        }\n        const container = this.container, canvasSize = container.canvas.size;\n        if (particle.needsNewPosition) {\n            const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n            particle.position.setTo(newPosition);\n            particle.velocity.setTo(particle.initialVelocity);\n            particle.absorberOrbit = undefined;\n            particle.needsNewPosition = false;\n        }\n        if (this.options.orbits) {\n            if (particle.absorberOrbit === undefined) {\n                particle.absorberOrbit = Vector.create(0, 0);\n                particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n            }\n            if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                const minSize = Math.min(canvasSize.width, canvasSize.height);\n                particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n            }\n            if (particle.absorberOrbitDirection === undefined) {\n                particle.absorberOrbitDirection =\n                    particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n            }\n            const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n            particle.velocity.setTo(Vector.origin);\n            const updateFunc = {\n                x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n            };\n            particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n            particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n            particle.absorberOrbit.length -= v.length;\n            particle.absorberOrbit.angle +=\n                ((((_a = particle.retina.moveSpeed) !== null && _a !== void 0 ? _a : 0) * container.retina.pixelRatio) / 100) *\n                    container.retina.reduceFactor;\n        }\n        else {\n            const addV = Vector.origin;\n            addV.length = v.length;\n            addV.angle = v.angle;\n            particle.velocity.addTo(addV);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, itemFromSingleOrMultiple } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions !== null && absorbersModeOptions !== void 0 ? absorbersModeOptions : itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        var _a, _b;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple((_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (absorbers instanceof Array) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine) {\n    const plugin = new AbsorbersPlugin();\n    await engine.addPlugin(plugin);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { getRangeValue, getValue, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBounds = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        if (destroyBounds.bottom) {\n            particle.destroyBounds.bottom = (getRangeValue(destroyBounds.bottom) * container.canvas.size.height) / 100;\n        }\n        if (destroyBounds.left) {\n            particle.destroyBounds.left = (getRangeValue(destroyBounds.left) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.right) {\n            particle.destroyBounds.right = (getRangeValue(destroyBounds.right) * container.canvas.size.width) / 100;\n        }\n        if (destroyBounds.top) {\n            particle.destroyBounds.top = (getRangeValue(destroyBounds.top) * container.canvas.size.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source === null || source === void 0 ? void 0 : source.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            this.split(particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n    addSplitParticle(parent, splitParticlesOptions) {\n        const destroyOptions = parent.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split, options = loadParticlesOptions(this.engine, this.container, parent.options), factor = getValue(splitOptions.factor);\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n        options.move.load({\n            center: {\n                x: parent.position.x,\n                y: parent.position.y,\n                mode: \"precise\",\n            },\n        });\n        if (typeof options.size.value === \"number\") {\n            options.size.value /= factor;\n        }\n        else {\n            options.size.value.min /= factor;\n            options.size.value.max /= factor;\n        }\n        options.load(splitParticlesOptions);\n        const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n            x: parent.position.x + randomInRange(offset),\n            y: parent.position.y + randomInRange(offset),\n        };\n        return this.container.particles.addParticle(position, options, parent.group, (particle) => {\n            var _a;\n            if (particle.size.value < 0.5) {\n                return false;\n            }\n            particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n            particle.splitCount = ((_a = parent.splitCount) !== null && _a !== void 0 ? _a : 0) + 1;\n            particle.unbreakable = true;\n            setTimeout(() => {\n                particle.unbreakable = false;\n            }, 500);\n            return true;\n        });\n    }\n    split(particle) {\n        const destroyOptions = particle.options.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        const splitOptions = destroyOptions.split;\n        if (splitOptions.count >= 0 &&\n            (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n            return;\n        }\n        const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n        for (let i = 0; i < rate; i++) {\n            this.addSplitParticle(particle, particlesSplitOptions);\n        }\n    }\n}\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container));\n}\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","export class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (this.size === undefined) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        var _h;\n        this.emitters = emitters;\n        this.container = container;\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (((_a = this.options.life.delay) !== null && _a !== void 0 ? _a : 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = (_b = this._initialPosition) !== null && _b !== void 0 ? _b : this.calcPosition();\n        this.name = this.options.name;\n        this._shape = (_c = this._engine.emitterShapeManager) === null || _c === void 0 ? void 0 : _c.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions !== null && particlesOptions !== void 0 ? particlesOptions : (particlesOptions = {});\n        (_d = particlesOptions.move) !== null && _d !== void 0 ? _d : (particlesOptions.move = {});\n        (_e = (_h = particlesOptions.move).direction) !== null && _e !== void 0 ? _e : (_h.direction = this.options.direction);\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            (_f = this.options.size) !== null && _f !== void 0 ? _f : (() => {\n                const size = new EmitterSize();\n                size.load({\n                    height: 0,\n                    mode: \"percent\",\n                    width: 0,\n                });\n                return size;\n            })();\n        this._lifeCount = (_g = this.options.life.count) !== null && _g !== void 0 ? _g : -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return {\n            width: this.size.mode === \"percent\"\n                ? (container.canvas.size.width * this.size.width) / 100\n                : this.size.width,\n            height: this.size.mode === \"percent\"\n                ? (container.canvas.size.height * this.size.height) / 100\n                : this.size.height,\n        };\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= ((_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this.prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this.calcPosition();\n    }\n    update(delta) {\n        var _a, _b, _c;\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = (_a = this._spawnDelay) !== null && _a !== void 0 ? _a : 0;\n            this._currentEmitDelay = (_b = this._emitDelay) !== null && _b !== void 0 ? _b : 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this.emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this.calcPosition();\n                    this._spawnDelay = (((_c = this.options.life.delay) !== null && _c !== void 0 ? _c : 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this.destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this.emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n    calcPosition() {\n        return calcPositionOrRandomFromSizeRanged({\n            size: this.container.canvas.size,\n            position: this.options.position,\n        });\n    }\n    destroy() {\n        this.emitters.removeEmitter(this);\n        this._engine.dispatchEvent(\"emitterDestroyed\", {\n            container: this.container,\n            data: {\n                emitter: this,\n            },\n        });\n    }\n    emit() {\n        if (this._paused) {\n            return;\n        }\n        const quantity = getRangeValue(this.options.rate.quantity);\n        this.emitParticles(quantity);\n    }\n    emitParticles(quantity) {\n        var _a, _b, _c;\n        const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n        for (let i = 0; i < quantity; i++) {\n            const particlesOptions = deepExtend({}, singleParticlesOptions);\n            if (this.spawnColor) {\n                const hslAnimation = (_a = this.options.spawnColor) === null || _a === void 0 ? void 0 : _a.animation;\n                if (hslAnimation) {\n                    this.spawnColor.h = this.setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                    this.spawnColor.s = this.setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                    this.spawnColor.l = this.setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                }\n                if (!particlesOptions.color) {\n                    particlesOptions.color = {\n                        value: this.spawnColor,\n                    };\n                }\n                else {\n                    particlesOptions.color.value = this.spawnColor;\n                }\n            }\n            if (!position) {\n                return;\n            }\n            const pPosition = (_c = (_b = this._shape) === null || _b === void 0 ? void 0 : _b.randomPosition(position, size, this.fill)) !== null && _c !== void 0 ? _c : position;\n            this.container.particles.addParticle(pPosition, particlesOptions);\n        }\n    }\n    prepareToDie() {\n        var _a;\n        if (this._paused) {\n            return;\n        }\n        const duration = (_a = this.options.life) === null || _a === void 0 ? void 0 : _a.duration;\n        if (this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal) &&\n            duration !== undefined &&\n            duration > 0) {\n            this._duration = duration * 1000;\n        }\n    }\n    setColorAnimation(animation, initValue, maxValue) {\n        var _a;\n        const container = this.container;\n        if (!animation.enable) {\n            return initValue;\n        }\n        const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue((_a = animation.speed) !== null && _a !== void 0 ? _a : 0);\n        return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, itemFromArray } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode === \"emitter\") {\n            let emittersModeOptions;\n            if (modeEmitters && modeEmitters.value instanceof Array) {\n                if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                    emittersModeOptions = [];\n                    const usedIndexes = [];\n                    for (let i = 0; i < modeEmitters.random.count; i++) {\n                        const idx = arrayRandomIndex(modeEmitters.value);\n                        if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                            i--;\n                            continue;\n                        }\n                        usedIndexes.push(idx);\n                        emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                    }\n                }\n                else {\n                    emittersModeOptions = modeEmitters.value;\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters === null || modeEmitters === void 0 ? void 0 : modeEmitters.value;\n            }\n            const emittersOptions = emittersModeOptions !== null && emittersModeOptions !== void 0 ? emittersModeOptions : emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n            executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n                this.addEmitter(emitter, ePosition);\n            });\n        }\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source === null || source === void 0 ? void 0 : source.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = (_b = (_a = source === null || source === void 0 ? void 0 : source.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (emitterMode.value instanceof Array) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_c = emitterMode.random.count) !== null && _c !== void 0 ? _c : 1,\n                                enable: (_d = emitterMode.random.enable) !== null && _d !== void 0 ? _d : false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: (_e = emitterMode.random.count) !== null && _e !== void 0 ? _e : 1,\n                                enable: (_f = emitterMode.random.enable) !== null && _f !== void 0 ? _f : false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        var _a, _b, _c;\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((emitters instanceof Array && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!((_c = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.events) === null || _b === void 0 ? void 0 : _b.onClick) === null || _c === void 0 ? void 0 : _c.mode) &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            var _a;\n            (_a = engine.emitterShapeManager) === null || _a === void 0 ? void 0 : _a.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        var _a, _b, _c, _d;\n        if (!this.container.retina.reduceFactor) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        let canEmit = true;\n        if (trailOptions.pauseOnStop) {\n            if (container.interactivity.mouse.position === this._lastPosition ||\n                (((_a = container.interactivity.mouse.position) === null || _a === void 0 ? void 0 : _a.x) === ((_b = this._lastPosition) === null || _b === void 0 ? void 0 : _b.x) &&\n                    ((_c = container.interactivity.mouse.position) === null || _c === void 0 ? void 0 : _c.y) === ((_d = this._lastPosition) === null || _d === void 0 ? void 0 : _d.y))) {\n                canEmit = false;\n            }\n        }\n        if (container.interactivity.mouse.position) {\n            this._lastPosition = {\n                x: container.interactivity.mouse.position.x,\n                y: container.interactivity.mouse.position.y,\n            };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source === null || source === void 0 ? void 0 : source.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container));\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Roll } from \"./Options/Classes/Roll\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !(roll === null || roll === void 0 ? void 0 : roll.enable)) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor, max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    getTransformValues(particle) {\n        var _a;\n        const roll = ((_a = particle.roll) === null || _a === void 0 ? void 0 : _a.enable) && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt === null || rollOpt === void 0 ? void 0 : rollOpt.enable) {\n            particle.roll = {\n                enable: rollOpt.enable,\n                horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n                vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n                angle: getRandom() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = rangeColorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: getRangeValue(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: getRangeValue(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = {\n                enable: false,\n                horizontal: false,\n                vertical: false,\n                angle: 0,\n                speed: 0,\n            };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!(roll === null || roll === void 0 ? void 0 : roll.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source === null || source === void 0 ? void 0 : source.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater());\n}\n","const initPjs = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initPjs };\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateAngle(particle, delta) {\n    var _a, _b;\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case 0:\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = 1;\n                break;\n            case \"clockwise\":\n                particle.rotate.status = 0;\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source === null || source === void 0 ? void 0 : source.rotate);\n        }\n    }\n    update(particle, delta) {\n        var _a, _b;\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n        particle.rotation = (_b = (_a = particle.rotate) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 0;\n    }\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadAngleUpdater(engine) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container));\n}\n","import { clamp, getDistances, getRandom } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), hDistance = particle.retina.maxDistance.horizontal, vDistance = particle.retina.maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    var _a;\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = (_a = particle.pathGenerator) === null || _a === void 0 ? void 0 : _a.generate(particle);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue } from \"tsparticles-engine\";\nimport { applyDistance, applyPath, getProximitySpeedFactor, spin } from \"./Utils\";\nexport class BaseMover {\n    init(particle) {\n        var _a;\n        const container = particle.container, options = particle.options, gravityOptions = options.move.gravity, spinOptions = options.move.spin;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        if (spinOptions.enable) {\n            const spinPos = (_a = spinOptions.position) !== null && _a !== void 0 ? _a : { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        var _a, _b, _c;\n        var _d, _e;\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, slowFactor = getProximitySpeedFactor(particle), baseSpeed = ((_a = (_d = particle.retina).moveSpeed) !== null && _a !== void 0 ? _a : (_d.moveSpeed = getRangeValue(moveOptions.speed) * container.retina.pixelRatio)) *\n            container.retina.reduceFactor, moveDrift = ((_b = (_e = particle.retina).moveDrift) !== null && _b !== void 0 ? _b : (_e.moveDrift = getRangeValue(particle.options.move.drift) * container.retina.pixelRatio)), maxSize = getRangeMax(particleOptions.size.value) * container.retina.pixelRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, speedFactor = sizeFactor * slowFactor * (delta.factor || 1), diffFactor = 2, moveSpeed = (baseSpeed * speedFactor) / diffFactor;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            applyPath(particle, delta);\n            const gravityOptions = particle.gravity, gravityFactor = (gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && gravityOptions.inverse ? -1 : 1;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) && moveSpeed) {\n                particle.velocity.y +=\n                    (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n            }\n            if (moveDrift && moveSpeed) {\n                particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n            }\n            const decay = particle.moveDecay;\n            if (decay != 1) {\n                particle.velocity.multTo(decay);\n            }\n            const velocity = particle.velocity.mult(moveSpeed), maxSpeed = (_c = particle.retina.maxSpeed) !== null && _c !== void 0 ? _c : container.retina.maxSpeed;\n            if ((gravityOptions === null || gravityOptions === void 0 ? void 0 : gravityOptions.enable) &&\n                maxSpeed > 0 &&\n                ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n                    (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n                velocity.y = gravityFactor * maxSpeed;\n                if (moveSpeed) {\n                    particle.velocity.y = velocity.y / moveSpeed;\n                }\n            }\n            const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n            if (zVelocityFactor != 1) {\n                velocity.multTo(zVelocityFactor);\n            }\n            particle.position.addTo(velocity);\n            if (moveOptions.vibrate) {\n                particle.position.x += Math.sin(particle.position.x * Math.cos(particle.position.y));\n                particle.position.y += Math.cos(particle.position.y * Math.sin(particle.position.x));\n            }\n        }\n        applyDistance(particle);\n    }\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine) {\n    engine.addMover(\"base\", () => new BaseMover());\n}\n","export class CircleDrawer {\n    draw(context, particle, radius) {\n        context.arc(0, 0, radius, 0, Math.PI * 2, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine) {\n    await engine.addShape(\"circle\", new CircleDrawer());\n}\n","import { getHslAnimationFromHsl, randomInRange, rangeColorToHsl } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue || !valueAnimation.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === 0) {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = 1;\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = 0;\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateColor(particle, delta) {\n    var _a, _b, _c;\n    const animationOptions = particle.options.color.animation;\n    if (((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h) !== undefined) {\n        updateColorValue(delta, particle.color.h, animationOptions.h, 360, false);\n    }\n    if (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s) !== undefined) {\n        updateColorValue(delta, particle.color.s, animationOptions.s, 100, true);\n    }\n    if (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l) !== undefined) {\n        updateColorValue(delta, particle.color.l, animationOptions.l, 100, true);\n    }\n}\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c;\n        const animationOptions = particle.options.color.animation;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((((_a = particle.color) === null || _a === void 0 ? void 0 : _a.h.value) !== undefined && animationOptions.h.enable) ||\n                (((_b = particle.color) === null || _b === void 0 ? void 0 : _b.s.value) !== undefined && animationOptions.s.enable) ||\n                (((_c = particle.color) === null || _c === void 0 ? void 0 : _c.l.value) !== undefined && animationOptions.l.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container));\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.attract) {\n                        container.attract = { particles: [] };\n                    }\n                    container.attract.clicking = false;\n                }\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source === null || source === void 0 ? void 0 : source.attract);\n        }\n    }\n    reset() {\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n    hoverAttract() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n        if (!attractOptions) {\n            return;\n        }\n        const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container));\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this.processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this.singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source === null || source === void 0 ? void 0 : source.bounce);\n        }\n    }\n    reset() {\n    }\n    processBounce(position, radius, area) {\n        const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (area instanceof Circle) {\n                circleBounce(circleBounceDataFromParticle(particle), {\n                    position,\n                    radius,\n                    mass: (radius ** 2 * Math.PI) / 2,\n                    velocity: Vector.origin,\n                    factor: Vector.origin,\n                });\n            }\n            else if (area instanceof Rectangle) {\n                rectBounce(particle, calculateBounds(position, radius));\n            }\n        }\n    }\n    processMouseBounce() {\n        const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n        if (!radius || radius < 0 || !mousePos) {\n            return;\n        }\n        this.processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n    }\n    singleSelectorBounce(selector, div) {\n        const container = this.container, query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, radius + tolerance)\n                : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n            this.processBounce(pos, radius, area);\n        });\n    }\n}\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container));\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { OptionsColor, executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = this.color instanceof Array ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble(delta);\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble(delta);\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source === null || source === void 0 ? void 0 : source.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n    clickBubble(delta) {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubble = options.interactivity.modes.bubble;\n        if (!bubble || !mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= distance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble(delta) {\n        const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n        if (!distance || distance < 0 || mousePos === undefined) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!bubbleOptions) {\n            return;\n        }\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = itemFromSingleOrMultiple(modeColor);\n            particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c, _d;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : (_b = options.interactivity.modes.bubble) === null || _b === void 0 ? void 0 : _b.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_d = (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubble = options.interactivity.modes.bubble;\n        if (!bubble || bubbleParam === undefined) {\n            return;\n        }\n        const bubbleDuration = bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    singleSelectorHover(delta, selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble || !selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.clear(particle, delta, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n}\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container));\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nfunction gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nfunction drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nfunction lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nfunction drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, (_a = p1.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, ls, pos1, pos2);\n    });\n}\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source === null || source === void 0 ? void 0 : source.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container));\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        var _a, _b;\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load((_b = (_a = data.links) !== null && _a !== void 0 ? _a : data.lineLinked) !== null && _b !== void 0 ? _b : data.line_linked);\n    }\n}\n","import { ExternalInteractorBase, drawLine, getDistance, getLinkColor, getLinkRandomColor, getStyleFromRgb, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nfunction drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        var _a;\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, (_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = (_a = grabLineOptions.color) !== null && _a !== void 0 ? _a : (_b = particle.options.links) === null || _b === void 0 ? void 0 : _b.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                return;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source === null || source === void 0 ? void 0 : source.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container));\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { Pauser } from \"./Pauser\";\nexport function loadExternalPauseInteraction(engine) {\n    engine.addInteractor(\"externalPause\", (container) => new Pauser(container));\n}\n","export class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nimport { itemFromArray } from \"tsparticles-engine\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const pushNb = pushOptions.quantity;\n            if (pushNb <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(pushNb, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source === null || source === void 0 ? void 0 : source.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container));\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","export class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = value;\n    }\n    load(data) {\n        var _a;\n        if (!data) {\n            return;\n        }\n        const quantity = (_a = data.quantity) !== null && _a !== void 0 ? _a : data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = quantity;\n        }\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = options.interactivity.modes.remove.quantity;\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n        }\n    }\n    reset() {\n    }\n}\n","import { Remover } from \"./Remover\";\nexport function loadExternalRemoveInteraction(engine) {\n    engine.addInteractor(\"externalRemove\", (container) => new Remover(container));\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nimport { executeOnSingleOrMultiple } from \"tsparticles-engine\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulse = options.interactivity.modes.repulse;\n            if (!repulse || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            container.repulse.clicking = true;\n            container.repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n            container.repulse.finish = false;\n            setTimeout(() => {\n                if (!container.destroyed) {\n                    if (!container.repulse) {\n                        container.repulse = { particles: [] };\n                    }\n                    container.repulse.clicking = false;\n                }\n            }, repulse.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this.hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this.clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this.singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source === null || source === void 0 ? void 0 : source.repulse);\n        }\n    }\n    reset() {\n    }\n    clickRepulse() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        if (!container.repulse.finish) {\n            if (!container.repulse.count) {\n                container.repulse.count = 0;\n            }\n            container.repulse.count++;\n            if (container.repulse.count === container.particles.count) {\n                container.repulse.finish = true;\n            }\n        }\n        if (container.repulse.clicking) {\n            const repulseDistance = container.retina.repulseModeDistance;\n            if (!repulseDistance || repulseDistance < 0) {\n                return;\n            }\n            const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n            if (mouseClickPos === undefined) {\n                return;\n            }\n            const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulse.speed, force = (-repulseRadius * velocity) / d;\n                if (d <= repulseRadius) {\n                    container.repulse.particles.push(particle);\n                    const vect = Vector.create(dx, dy);\n                    vect.length = force;\n                    particle.velocity.setTo(vect);\n                }\n            }\n        }\n        else if (container.repulse.clicking === false) {\n            for (const particle of container.repulse.particles) {\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.repulse.particles = [];\n        }\n    }\n    hoverRepulse() {\n        const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n        if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n            return;\n        }\n        this.processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n    }\n    processRepulse(position, repulseRadius, area, divRepulse) {\n        var _a;\n        const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n        if (!repulseOptions) {\n            return;\n        }\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position), velocity = ((_a = divRepulse === null || divRepulse === void 0 ? void 0 : divRepulse.speed) !== null && _a !== void 0 ? _a : repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n            particle.position.addTo(normVec);\n        }\n    }\n    singleSelectorRepulse(selector, div) {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        const query = document.querySelectorAll(selector);\n        if (!query.length) {\n            return;\n        }\n        query.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n            this.processRepulse(pos, repulseRadius, area, divRepulse);\n        });\n    }\n}\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container));\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source === null || source === void 0 ? void 0 : source.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slow = options.interactivity.modes.slow;\n        if (!slow || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slow.factor;\n        if (dist <= radius) {\n            particle.slow.inRange = true;\n            particle.slow.factor = proximityFactor / slowFactor;\n        }\n    }\n}\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container));\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { getStyleFromHsl } from \"tsparticles-engine\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1), imageRes = {\n        color,\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { downloadSvgImage, loadImage, replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor() {\n        this._images = [];\n    }\n    addImage(container, image) {\n        const containerImages = this.getImages(container);\n        containerImages === null || containerImages === void 0 ? void 0 : containerImages.images.push(image);\n    }\n    destroy() {\n        this._images = [];\n    }\n    draw(context, particle, radius, opacity) {\n        var _a;\n        const image = particle.image, element = image === null || image === void 0 ? void 0 : image.element;\n        if (!element) {\n            return;\n        }\n        const ratio = (_a = image === null || image === void 0 ? void 0 : image.ratio) !== null && _a !== void 0 ? _a : 1, pos = {\n            x: -radius,\n            y: -radius,\n        };\n        context.globalAlpha = opacity;\n        context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        context.globalAlpha = 1;\n    }\n    getImages(container) {\n        const containerImages = this._images.find((t) => t.id === container.id);\n        if (!containerImages) {\n            this._images.push({\n                id: container.id,\n                images: [],\n            });\n            return this.getImages(container);\n        }\n        else {\n            return containerImages;\n        }\n    }\n    getSidesCount() {\n        return 12;\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const container = particle.container, images = this.getImages(container).images, imageData = particle.shapeData, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(container, imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        var _a;\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        const images = this.getImages(container).images, imageData = particle.shapeData, color = particle.getFillColor(), replaceColor = (_a = imageData.replaceColor) !== null && _a !== void 0 ? _a : imageData.replace_color, image = images.find((t) => t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            var _a, _b;\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    loaded: true,\n                    ratio: imageData.width / imageData.height,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = (_a = imageData.fill) !== null && _a !== void 0 ? _a : particle.fill, close = (_b = imageData.close) !== null && _b !== void 0 ? _b : particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n    async loadImageShape(container, imageShape) {\n        var _a;\n        const source = imageShape.src;\n        if (!source) {\n            throw new Error(\"Error tsParticles - No image.src\");\n        }\n        try {\n            const image = {\n                source: source,\n                type: source.substring(source.length - 3),\n                error: false,\n                loading: true,\n            };\n            this.addImage(container, image);\n            const imageFunc = ((_a = imageShape.replaceColor) !== null && _a !== void 0 ? _a : imageShape.replace_color) ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch (_b) {\n            throw new Error(`tsParticles error - ${imageShape.src} not found`);\n        }\n    }\n}\n","import { ImageDrawer } from \"./ImageDrawer\";\nexport async function loadImageShape(engine) {\n    const imageDrawer = new ImageDrawer();\n    await engine.addShape(\"image\", imageDrawer);\n    await engine.addShape(\"images\", imageDrawer);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source === null || source === void 0 ? void 0 : source.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container));\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine) {\n    await engine.addShape(\"line\", new LineDrawer());\n}\n","import { clamp, getRandom, getRangeMax, getRangeMin, getRangeValue, randomInRange, } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateOpacity(particle, delta) {\n    var _a, _b, _c, _d, _e, _f;\n    if (!particle.opacity) {\n        return;\n    }\n    const minValue = particle.opacity.min, maxValue = particle.opacity.max, decay = (_a = particle.opacity.decay) !== null && _a !== void 0 ? _a : 1;\n    if (particle.destroyed ||\n        !particle.opacity.enable ||\n        (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) > ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))) {\n        return;\n    }\n    switch (particle.opacity.status) {\n        case 0:\n            if (particle.opacity.value >= maxValue) {\n                particle.opacity.status = 1;\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value += ((_e = particle.opacity.velocity) !== null && _e !== void 0 ? _e : 0) * delta.factor;\n            }\n            break;\n        case 1:\n            if (particle.opacity.value <= minValue) {\n                particle.opacity.status = 0;\n                if (!particle.opacity.loops) {\n                    particle.opacity.loops = 0;\n                }\n                particle.opacity.loops++;\n            }\n            else {\n                particle.opacity.value -= ((_f = particle.opacity.velocity) !== null && _f !== void 0 ? _f : 0) * delta.factor;\n            }\n            break;\n    }\n    if (particle.opacity.velocity && particle.opacity.decay !== 1) {\n        particle.opacity.velocity *= decay;\n    }\n    checkDestroy(particle, particle.opacity.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.opacity.value = clamp(particle.opacity.value, minValue, maxValue);\n    }\n}\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = {\n            enable: opacityOptions.animation.enable,\n            max: getRangeMax(opacityOptions.value),\n            min: getRangeMin(opacityOptions.value),\n            value: getRangeValue(opacityOptions.value),\n            loops: 0,\n            maxLoops: getRangeValue(opacityOptions.animation.count),\n        };\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.decay = 1 - getRangeValue(opacityAnimation.decay);\n            particle.opacity.status = 0;\n            const opacityRange = opacityOptions.value;\n            particle.opacity.min = getRangeMin(opacityRange);\n            particle.opacity.max = getRangeMax(opacityRange);\n            switch (opacityAnimation.startValue) {\n                case \"min\":\n                    particle.opacity.value = particle.opacity.min;\n                    particle.opacity.status = 0;\n                    break;\n                case \"random\":\n                    particle.opacity.value = randomInRange(particle.opacity);\n                    particle.opacity.status =\n                        getRandom() >= 0.5 ? 0 : 1;\n                    break;\n                case \"max\":\n                default:\n                    particle.opacity.value = particle.opacity.max;\n                    particle.opacity.status = 1;\n                    break;\n            }\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            (((_a = particle.opacity.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.opacity.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 &&\n                    ((_c = particle.opacity.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.opacity.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container));\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.right < 0) {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if (data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") {\n        return;\n    }\n    if (data.bounds.bottom < 0) {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height) {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0) {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { calculateBounds } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { Vector, getDistances, isPointInside } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        var _a, _b, _c, _d;\n        const outModes = particle.options.move.outModes;\n        this.updateOutMode(particle, delta, (_a = outModes.bottom) !== null && _a !== void 0 ? _a : outModes.default, \"bottom\");\n        this.updateOutMode(particle, delta, (_b = outModes.left) !== null && _b !== void 0 ? _b : outModes.default, \"left\");\n        this.updateOutMode(particle, delta, (_c = outModes.right) !== null && _c !== void 0 ? _c : outModes.default, \"right\");\n        this.updateOutMode(particle, delta, (_d = outModes.top) !== null && _d !== void 0 ? _d : outModes.default, \"top\");\n    }\n    updateOutMode(particle, delta, outMode, direction) {\n        for (const updater of this.updaters) {\n            updater.update(particle, direction, delta, outMode);\n        }\n    }\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container));\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions;\n        if (isSsr() || !options.interactivity.events.onHover.parallax.enable) {\n            return;\n        }\n        const parallaxForce = options.interactivity.events.onHover.parallax.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasCenter = {\n            x: container.canvas.size.width / 2,\n            y: container.canvas.size.height / 2,\n        }, parallaxSmooth = options.interactivity.events.onHover.parallax.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        };\n        particle.offset.x += (centerDistance.x - particle.offset.x) / parallaxSmooth;\n        particle.offset.y += (centerDistance.y - particle.offset.y) / parallaxSmooth;\n    }\n}\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine) {\n    engine.addMover(\"parallax\", () => new ParallaxMover());\n}\n","import { ParticlesInteractorBase, getDistances } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        var _a;\n        const container = this.container, distance = (_a = p1.retina.attractDistance) !== null && _a !== void 0 ? _a : container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container));\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle } from \"tsparticles-engine\";\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p1 : p2;\n        deleteP.destroy();\n    }\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container));\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = Object.assign({}, canvasSize);\n    }\n    contains(point) {\n        if (super.contains(point)) {\n            return true;\n        }\n        const posNE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y,\n        };\n        if (super.contains(posNE)) {\n            return true;\n        }\n        const posSE = {\n            x: point.x - this.canvasSize.width,\n            y: point.y - this.canvasSize.height,\n        };\n        if (super.contains(posSE)) {\n            return true;\n        }\n        const posSW = {\n            x: point.x,\n            y: point.y - this.canvasSize.height,\n        };\n        return super.contains(posSW);\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nimport { OptionsColor } from \"tsparticles-engine\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistance, getLinkRandomColor } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !(linkOpt2 === null || linkOpt2 === void 0 ? void 0 : linkOpt2.enable) ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        return !!((_a = particle.options.links) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadParticlesOptions(options, ...sources) {\n        var _a, _b;\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load((_b = (_a = source === null || source === void 0 ? void 0 : source.links) !== null && _a !== void 0 ? _a : source === null || source === void 0 ? void 0 : source.lineLinked) !== null && _b !== void 0 ? _b : source === null || source === void 0 ? void 0 : source.line_linked);\n        }\n    }\n    reset() {\n    }\n    setColor(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.linkContainer, linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (linkColor) {\n            return;\n        }\n        const optColor = linksOptions.color;\n        linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n        if (linksOptions.id === undefined) {\n            container.particles.linksColor = linkColor;\n        }\n        else {\n            container.particles.linksColors.set(linksOptions.id, linkColor);\n        }\n    }\n}\n","import { Linker } from \"./Linker\";\nexport async function loadInteraction(engine) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container));\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(context, width, begin, end, maxDistance, canvasSize, warp, backgroundMask, composite, colorLine, opacity, shadow) {\n    let drawn = false;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(context, pos1, pos2, pos3, backgroundMask, composite, colorTriangle, opacityTriangle) {\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\n","import { drawLinkLine, drawLinkTriangle } from \"./Utils\";\nimport { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb } from \"tsparticles-engine\";\nfunction getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nfunction setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        var _a;\n        const container = this.container, pOptions = particle.options;\n        if (!particle.links || particle.links.length <= 0) {\n            return;\n        }\n        const p1Links = particle.links.filter((l) => pOptions.links && this.getLinkFrequency(particle, l.destination) <= pOptions.links.frequency);\n        for (const link of p1Links) {\n            this.drawTriangles(container, pOptions, particle, link, p1Links);\n            if (link.opacity > 0 && ((_a = particle.retina.linksWidth) !== null && _a !== void 0 ? _a : 0) > 0) {\n                this.drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio;\n        particle.retina.linksDistance = particle.options.links.distance * ratio;\n        particle.retina.linksWidth = particle.options.links.width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n    drawLinkLine(p1, link) {\n        const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        let opacity = link.opacity;\n        container.canvas.draw((ctx) => {\n            var _a, _b, _c;\n            if (!p1.options.links) {\n                return;\n            }\n            let colorLine;\n            const twinkle = (_a = p1.options.twinkle) === null || _a === void 0 ? void 0 : _a.lines;\n            if (twinkle === null || twinkle === void 0 ? void 0 : twinkle.enable) {\n                const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                if (twinkling && twinkleRgb) {\n                    colorLine = twinkleRgb;\n                    opacity = getRangeValue(twinkle.opacity);\n                }\n            }\n            if (!colorLine) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorLine = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorLine) {\n                return;\n            }\n            const width = (_b = p1.retina.linksWidth) !== null && _b !== void 0 ? _b : 0, maxDistance = (_c = p1.retina.linksDistance) !== null && _c !== void 0 ? _c : 0;\n            drawLinkLine(ctx, width, pos1, pos2, maxDistance, container.canvas.size, p1.options.links.warp, options.backgroundMask.enable, options.backgroundMask.composite, colorLine, opacity, p1.options.links.shadow);\n        });\n    }\n    drawLinkTriangle(p1, link1, link2) {\n        var _a;\n        if (!p1.options.links) {\n            return;\n        }\n        const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, triangleOptions = p1.options.links.triangles, opacityTriangle = (_a = triangleOptions.opacity) !== null && _a !== void 0 ? _a : (link1.opacity + link2.opacity) / 2;\n        if (opacityTriangle <= 0) {\n            return;\n        }\n        container.canvas.draw((ctx) => {\n            var _a;\n            const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : 0;\n            if (getDistance(pos1, pos2) > linksDistance ||\n                getDistance(pos3, pos2) > linksDistance ||\n                getDistance(pos3, pos1) > linksDistance) {\n                return;\n            }\n            let colorTriangle = rangeColorToRgb(triangleOptions.color);\n            if (!colorTriangle) {\n                const linksOptions = p1.options.links, linkColor = (linksOptions === null || linksOptions === void 0 ? void 0 : linksOptions.id) !== undefined\n                    ? container.particles.linksColors.get(linksOptions.id)\n                    : container.particles.linksColor;\n                colorTriangle = getLinkColor(p1, p2, linkColor);\n            }\n            if (!colorTriangle) {\n                return;\n            }\n            drawLinkTriangle(ctx, pos1, pos2, pos3, options.backgroundMask.enable, options.backgroundMask.composite, colorTriangle, opacityTriangle);\n        });\n    }\n    drawTriangles(container, options, p1, link, p1Links) {\n        var _a, _b, _c;\n        const p2 = link.destination;\n        if (!(((_a = options.links) === null || _a === void 0 ? void 0 : _a.triangles.enable) && ((_b = p2.options.links) === null || _b === void 0 ? void 0 : _b.triangles.enable))) {\n            return;\n        }\n        const vertices = (_c = p2.links) === null || _c === void 0 ? void 0 : _c.filter((t) => {\n            const linkFreq = this.getLinkFrequency(p2, t.destination);\n            return (p2.options.links &&\n                linkFreq <= p2.options.links.frequency &&\n                p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n        });\n        if (!(vertices === null || vertices === void 0 ? void 0 : vertices.length)) {\n            return;\n        }\n        for (const vertex of vertices) {\n            const p3 = vertex.destination, triangleFreq = this.getTriangleFrequency(p1, p2, p3);\n            if (triangleFreq > options.links.triangles.frequency) {\n                continue;\n            }\n            this.drawLinkTriangle(p1, link, vertex);\n        }\n    }\n    getLinkFrequency(p1, p2) {\n        return setLinkFrequency([p1, p2], this._freqs.links);\n    }\n    getTriangleFrequency(p1, p2, p3) {\n        return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadPlugin(engine) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin);\n}\n","import { loadInteraction } from \"./interaction\";\nimport { loadPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine) {\n    await loadInteraction(engine);\n    await loadPlugin(engine);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","export class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius);\n        const side = this.getSidesData(particle, radius);\n        const sideCount = side.count.numerator * side.count.denominator;\n        const decimalSides = side.count.numerator / side.count.denominator;\n        const interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides;\n        const interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        return (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        const sides = this.getSidesCount(particle);\n        return {\n            x: -radius / (sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        var _a, _b;\n        const polygon = particle.shapeData;\n        const sides = (_b = (_a = polygon === null || polygon === void 0 ? void 0 : polygon.sides) !== null && _a !== void 0 ? _a : polygon === null || polygon === void 0 ? void 0 : polygon.nb_sides) !== null && _b !== void 0 ? _b : 5;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine) {\n    await engine.addShape(\"polygon\", new PolygonDrawer());\n}\nexport async function loadTriangleShape(engine) {\n    await engine.addShape(\"triangle\", new TriangleDrawer());\n}\nexport async function loadPolygonShape(engine) {\n    await loadGenericPolygonShape(engine);\n    await loadTriangleShape(engine);\n}\n","import { clamp, getRandom } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nfunction updateSize(particle, delta) {\n    var _a, _b, _c, _d, _e;\n    const sizeVelocity = ((_a = particle.size.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, minValue = particle.size.min, maxValue = particle.size.max, decay = (_b = particle.size.decay) !== null && _b !== void 0 ? _b : 1;\n    if (particle.destroyed ||\n        !particle.size.enable ||\n        (((_c = particle.size.maxLoops) !== null && _c !== void 0 ? _c : 0) > 0 && ((_d = particle.size.loops) !== null && _d !== void 0 ? _d : 0) > ((_e = particle.size.maxLoops) !== null && _e !== void 0 ? _e : 0))) {\n        return;\n    }\n    switch (particle.size.status) {\n        case 0:\n            if (particle.size.value >= maxValue) {\n                particle.size.status = 1;\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value += sizeVelocity;\n            }\n            break;\n        case 1:\n            if (particle.size.value <= minValue) {\n                particle.size.status = 0;\n                if (!particle.size.loops) {\n                    particle.size.loops = 0;\n                }\n                particle.size.loops++;\n            }\n            else {\n                particle.size.value -= sizeVelocity;\n            }\n    }\n    if (particle.size.velocity && decay !== 1) {\n        particle.size.velocity *= decay;\n    }\n    checkDestroy(particle, particle.size.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        particle.size.value = clamp(particle.size.value, minValue, maxValue);\n    }\n}\nexport class SizeUpdater {\n    init(particle) {\n        var _a;\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                (((_a = particle.retina.sizeAnimationSpeed) !== null && _a !== void 0 ? _a : container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            (((_a = particle.size.maxLoops) !== null && _a !== void 0 ? _a : 0) <= 0 ||\n                (((_b = particle.size.maxLoops) !== null && _b !== void 0 ? _b : 0) > 0 && ((_c = particle.size.loops) !== null && _c !== void 0 ? _c : 0) < ((_d = particle.size.maxLoops) !== null && _d !== void 0 ? _d : 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater());\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        context.rect(-radius / fixFactor, -radius / fixFactor, (radius * 2) / fixFactor, (radius * 2) / fixFactor);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine) {\n    const drawer = new SquareDrawer();\n    await engine.addShape(\"edge\", drawer);\n    await engine.addShape(\"square\", drawer);\n}\n","export class StarDrawer {\n    draw(context, particle, radius) {\n        var _a;\n        const star = particle.shapeData, sides = this.getSidesCount(particle), inset = (_a = star === null || star === void 0 ? void 0 : star.inset) !== null && _a !== void 0 ? _a : 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        var _a, _b;\n        const star = particle.shapeData;\n        return (_b = (_a = star === null || star === void 0 ? void 0 : star.sides) !== null && _a !== void 0 ? _a : star === null || star === void 0 ? void 0 : star.nb_sides) !== null && _b !== void 0 ? _b : 5;\n    }\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine) {\n    await engine.addShape(\"star\", new StarDrawer());\n}\n","import { getHslAnimationFromHsl, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, value, valueAnimation, max, decrease) {\n    var _a, _b;\n    const colorValue = value;\n    if (!colorValue || !colorValue.enable) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = ((_a = value.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor + offset * 3.6, decay = (_b = value.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!decrease || colorValue.status === 0) {\n        colorValue.value += velocity;\n        if (decrease && colorValue.value > max) {\n            colorValue.status = 1;\n            colorValue.value -= colorValue.value % max;\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            colorValue.status = 0;\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nfunction updateStrokeColor(particle, delta) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n    if (!((_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color)) {\n        return;\n    }\n    const animationOptions = particle.stroke.color.animation, h = (_c = (_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h) !== null && _c !== void 0 ? _c : (_d = particle.color) === null || _d === void 0 ? void 0 : _d.h;\n    if (h) {\n        updateColorValue(delta, h, animationOptions.h, 360, false);\n    }\n    const s = (_f = (_e = particle.strokeColor) === null || _e === void 0 ? void 0 : _e.s) !== null && _f !== void 0 ? _f : (_g = particle.color) === null || _g === void 0 ? void 0 : _g.s;\n    if (s) {\n        updateColorValue(delta, s, animationOptions.s, 100, true);\n    }\n    const l = (_j = (_h = particle.strokeColor) === null || _h === void 0 ? void 0 : _h.l) !== null && _j !== void 0 ? _j : (_k = particle.color) === null || _k === void 0 ? void 0 : _k.l;\n    if (l) {\n        updateColorValue(delta, l, animationOptions.l, 100, true);\n    }\n}\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a, _b;\n        const container = this.container;\n        particle.stroke = itemFromSingleOrMultiple(particle.options.stroke, particle.id, particle.options.reduceDuplicates);\n        particle.strokeWidth = particle.stroke.width * container.retina.pixelRatio;\n        const strokeHslColor = (_a = rangeColorToHsl(particle.stroke.color)) !== null && _a !== void 0 ? _a : particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, (_b = particle.stroke.color) === null || _b === void 0 ? void 0 : _b.animation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        var _a, _b, _c, _d;\n        const color = (_a = particle.stroke) === null || _a === void 0 ? void 0 : _a.color;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((((_b = particle.strokeColor) === null || _b === void 0 ? void 0 : _b.h.value) !== undefined && color.animation.h.enable) ||\n                (((_c = particle.strokeColor) === null || _c === void 0 ? void 0 : _c.s.value) !== undefined && color.animation.s.enable) ||\n                (((_d = particle.strokeColor) === null || _d === void 0 ? void 0 : _d.l.value) !== undefined && color.animation.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container));\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = textParticle.text, style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\", weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\", size = Math.round(radius) * 2, font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine) {\n    const drawer = new TextDrawer();\n    for (const type of validTypes) {\n        await engine.addShape(type, drawer);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadAngleUpdater } from \"tsparticles-updater-angle\";\nimport { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine) {\n    await loadBaseMover(engine);\n    await loadParallaxMover(engine);\n    await loadExternalAttractInteraction(engine);\n    await loadExternalBounceInteraction(engine);\n    await loadExternalBubbleInteraction(engine);\n    await loadExternalConnectInteraction(engine);\n    await loadExternalGrabInteraction(engine);\n    await loadExternalPauseInteraction(engine);\n    await loadExternalPushInteraction(engine);\n    await loadExternalRemoveInteraction(engine);\n    await loadExternalRepulseInteraction(engine);\n    await loadExternalSlowInteraction(engine);\n    await loadParticlesAttractInteraction(engine);\n    await loadParticlesCollisionsInteraction(engine);\n    await loadParticlesLinksInteraction(engine);\n    await loadCircleShape(engine);\n    await loadImageShape(engine);\n    await loadLineShape(engine);\n    await loadPolygonShape(engine);\n    await loadSquareShape(engine);\n    await loadStarShape(engine);\n    await loadTextShape(engine);\n    await loadLifeUpdater(engine);\n    await loadOpacityUpdater(engine);\n    await loadSizeUpdater(engine);\n    await loadAngleUpdater(engine);\n    await loadColorUpdater(engine);\n    await loadStrokeColorUpdater(engine);\n    await loadOutModesUpdater(engine);\n    await initPjs(engine);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { TiltAnimation } from \"./TiltAnimation\";\nimport { ValueWithRandom } from \"tsparticles-engine\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n    var _a, _b;\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case 0:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        var _a;\n        const tilt = ((_a = particle.tilt) === null || _a === void 0 ? void 0 : _a.enable) && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        var _a;\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = 1;\n                break;\n            case \"clockwise\":\n                particle.tilt.status = 0;\n                break;\n        }\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source === null || source === void 0 ? void 0 : source.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container));\n}\n","import { OptionsColor, setRangeValue } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source === null || source === void 0 ? void 0 : source.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater());\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { WobbleSpeed } from \"./WobbleSpeed\";\nimport { setRangeValue } from \"tsparticles-engine\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (typeof data.speed === \"number\") {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { getRandom, getRangeValue } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!(wobble === null || wobble === void 0 ? void 0 : wobble.enable) || !particle.wobble) {\n        return;\n    }\n    const angleSpeed = particle.wobble.angleSpeed * delta.factor, moveSpeed = particle.wobble.moveSpeed * delta.factor, distance = (moveSpeed * (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI;\n    particle.wobble.angle += angleSpeed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue((_a = wobbleOpt === null || wobbleOpt === void 0 ? void 0 : wobbleOpt.distance) !== null && _a !== void 0 ? _a : 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        var _a;\n        return !particle.destroyed && !particle.spawning && !!((_a = particle.options.wobble) === null || _a === void 0 ? void 0 : _a.enable);\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source === null || source === void 0 ? void 0 : source.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container));\n}\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine) {\n    await loadSlim(engine);\n    await loadDestroyUpdater(engine);\n    await loadRollUpdater(engine);\n    await loadTiltUpdater(engine);\n    await loadTwinkleUpdater(engine);\n    await loadWobbleUpdater(engine);\n    await loadExternalTrailInteraction(engine);\n    await loadAbsorbersPlugin(engine);\n    await loadEmittersPlugin(engine);\n}\n"],"names":["EventDispatcher","constructor","this","_listeners","Map","addEventListener","type","listener","_a","removeEventListener","get","set","push","dispatchEvent","args","forEach","handler","hasEventListener","removeAllEventListeners","delete","arr","length","idx","indexOf","splice","Vector3d","xOrCoords","y","z","x","coords3d","undefined","Error","origin","create","angle","Math","atan2","updateFromAngle","sqrt","getLengthSq","source","add","v","addTo","copy","clone","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","rotate","cos","sin","setTo","c","v3d","subFrom","Vector","super","_random","random","easings","getEasing","name","noEasing","value","getRandom","clamp","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","setRangeValue","getValue","options","enable","minimumValue","getDistances","pointA","pointB","dx","dy","distance","getDistance","getParticleDirectionAngle","direction","position","center","PI","getParticleBaseVelocity","baseVelocity","collisionVelocity","v1","v2","m1","m2","calcPositionFromSize","data","size","width","height","calcPositionOrRandomFromSize","_b","_c","_d","calcPositionOrRandomFromSizeRanged","calcExactPositionOrRandomFromSize","parseAlpha","input","endsWith","parseFloat","rectSideBounce","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","res","bounced","checkSelector","element","selectors","executeOnSingleOrMultiple","selector","matches","Array","some","t","isSsr","window","document","hasMatchMedia","matchMedia","safeMatchMedia","query","animate","callback","setTimeout","requestAnimationFrame","cancelAnimation","handle","clearTimeout","cancelAnimationFrame","isInArray","array","async","loadFont","font","weight","fonts","load","arrayRandomIndex","itemFromArray","index","useIndex","isPointInside","point","offset","radius","areBoundsInside","calculateBounds","bounds","inside","top","right","left","bottom","deepExtend","destination","sources","sourceIsArray","isArray","key","sourceDict","isObject","destDict","map","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","divModeExecute","divMode","divEnabled","singleDivModeExecute","circleBounceDataFromParticle","p","getPosition","getRadius","mass","getMass","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","pPos","resH","resV","obj","item","itemFromSingleOrMultiple","find","randomColorValue","midColorValue","colorManagers","addColorManager","manager","hue2rgb","q","stringToRgba","startsWith","stringPrefix","parseString","shorthandRegex","hexFixed","replace","_","g","b","a","regex","result","exec","parseInt","rangeColorToRgb","color","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","h","l","s","hslToRgb","hsl","hslPercent","hslaToRgba","hsla","rgbResult","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","animation","getHslAnimationFromHsl","animationOptions","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","speed","decay","status","sync","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","drawTriangle","p3","paintBase","dimension","baseColor","fillStyle","fillRect","clear","clearRect","drawParticle","_e","_f","container","delta","colorStyles","backgroundMask","composite","shadow","transform","pos","rotation","pathRotation","rotateData","transformData","d","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","fill","stroke","lineWidth","strokeWidth","strokeStyle","drawShape","close","drawShapeAfterEffect","shape","drawer","drawers","draw","retina","pixelRatio","afterEffect","drawPlugin","plugin","drawParticlePlugin","alterHsl","generatedAttribute","touchEndEvent","mouseDownEvent","mouseUpEvent","mouseMoveEvent","touchStartEvent","touchMoveEvent","mouseLeaveEvent","mouseOutEvent","touchCancelEvent","resizeEvent","visibilityChangeEvent","setTransformValue","newFactor","newValue","Canvas","_context","_generated","_preDrawUpdaters","_postDrawUpdaters","_resizePlugins","_colorPlugins","_mutationObserver","MutationObserver","records","record","attributeName","_repairStyle","_fullScreen","actualOptions","fullScreen","trail","particles","move","paint","_trailFillColor","_paintBase","ctx","destroy","disconnect","remove","_resetOriginalStyle","cb","spawning","destroyed","pfColor","psColor","fColor","sColor","_getPluginParticleColors","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","bubble","strokeOpacity","zOpacity","zStrokeOpacity","_applyPreDrawUpdaters","sizeRate","_applyPostDrawUpdaters","init","resize","_initStyle","_initCover","_initTrail","initBackground","observe","attributes","initUpdaters","initPlugins","background","elementStyle","style","backgroundColor","backgroundImage","image","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","particleFillColor","particleStrokeColor","updater","updaters","afterDraw","getColorStyles","getTransformValues","beforeDraw","loadCanvas","canvas","dataset","ariaHidden","_originalStyle","offsetHeight","offsetWidth","getContext","cover","_coverColorStyle","pxRatio","newSize","oldSize","Object","assign","started","resizeFactor","needsRefresh","updateActualOptions","setDensity","_applyResizePlugins","refresh","call","updaterTransform","coverRgb","coverColor","_setFullScreenStyle","setProperty","fillColor","originalStyle","priority","toString","manageListener","event","addOptions","passive","capture","removeOptions","EventListeners","canPush","mouseMoveHandler","e","mouseTouchMove","touchStartHandler","touchMoveHandler","touchEndHandler","mouseTouchFinish","mouseLeaveHandler","touchCancelHandler","touchEndClickHandler","mouseTouchClick","mouseUpHandler","mouseDownHandler","mouseDown","visibilityChangeHandler","handleVisibilityChange","themeChangeHandler","handleThemeChange","oldThemeChangeHandler","resizeHandler","handleWindowResize","addListeners","manageListeners","removeListeners","doMouseTouchClick","mousePos","interactivity","mouse","clickPosition","clickTime","Date","getTime","onClick","events","handleClickMode","mediaEvent","themeName","defaultThemes","dark","light","theme","themes","default","auto","loadTheme","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","resizeTimeout","windowResize","detectType","detectsOn","mouseLeaveTmpEvent","canvasEl","parentElement","parentNode","mediaMatch","addListener","removeListener","interactivityEl","html","onHover","pointerEvents","ResizeObserver","resizeObserver","unobserve","entries","entry","target","clicking","downPosition","handled","mousePosition","clickPositionValid","_g","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","initDelta","fpsLimit","smooth","FrameManager","timestamp","lastFrameTime","lifeTime","duration","console","error","OptionsColor","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","el","elementId","ids","Parallax","force","HoverEvent","parallax","Events","onDiv","onclick","ondiv","onhover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","ManualParticle","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","count","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","Random","ValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","overlap","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","maxSpeed","MovePath","delay","generator","MoveTrail","OutModes","Spin","Move","attract","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","AnimationOptions","OpacityAnimation","startValue","opacity_min","Opacity","anim","ParticlesDensity","area","value_area","ParticlesNumber","density","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","character","custom","images","polygon","_value","loadShape","mainKey","altKey","altOverride","emptyValue","mainDifferentValues","altDifferentValues","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","autoPlay","detectRetina","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","preset","_importPreset","optResponsive","sort","optTheme","_findDefaultTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","getPreset","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","isEnabled","interact","reset","fixOutMode","checkModes","coord","maxCoord","setCb","Particle","id","overrideOptions","override","unbreakable","inRange","slow","particleDestroyed","roll","backColor","alter","backFactor","backSum","rolled","strokeColor","_h","_j","lastPathTime","misplaced","maxDistance","outType","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","shapeOptions","overrideShapeType","shapeData","_loadShapeData","pathOptions","pathDelay","pathGenerator","getPathGenerator","addPath","zIndexValue","initParticle","sizeOptions","sizeRange","sizeAnimation","loops","maxLoops","_calcPosition","initialPosition","canvasSize","moveCenter","isCenterPercent","initialVelocity","_calculateVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","moveOptions","rad","radOffset","range","collisionsOptions","overlapOptions","overlaps","Point","Range","Circle","contains","intersects","rect","circle","distPos","abs","rSum","dist","w","edges","pow","Rectangle","w2","h2","QuadTree","rectangle","capacity","_points","_divided","insert","subdivide","_NE","_NW","_SE","_SW","check","found","queryCircle","queryRectangle","Particles","nextId","zArray","pool","interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","initializer","countToRemove","removeQuantity","_pushParticle","update","particlesInitialization","pathGenerators","groupOptions","i","j","nb","pushing","removeAt","quantity","deleted","zIdx","_applyDensity","particlesToDelete","particleUpdate","externalInteract","particlesInteract","manualCount","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","densityOptions","pop","canAdd","warn","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","props","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGeneratorKey","defaultPathGenerator","generate","Container","_delay","_firstStart","_paused","_sourceOptions","_initialSourceOptions","frameManager","_options","_eventListeners","IntersectionObserver","_intersectionObserver","_intersectionManager","addClickHandler","clickOrTouchHandler","posRetina","clickHandler","touched","touchMoved","changedTouches","radiusX","radiusY","has","stop","keys","mainArr","dom","findIndex","refreshTime","_drawAnimationFrame","nextFrame","exportConfiguration","JSON","stringify","exportImage","quality","toBlob","exportImg","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","Promise","resolve","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","isIntersecting","fetchError","statusCode","getDataFromUrl","jsonUrl","url","response","fetch","ok","json","Loader","tagId","params","remote","loadRemoteOptions","domContainer","getElementById","createElement","querySelector","append","currentOptions","oldIndex","old","domItem","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","newId","newIndex","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","needsPlugin","Engine","_domArray","_eventDispatcher","_initialized","_loader","interactorInitializer","moverInitializer","updaterInitializer","customDrawer","pathConfigJson","loadJSON","instance","setJSON","setOnClickHandler","HslColorManager","RgbColorManager","rgbColor","ExternalInteractorBase","ParticlesInteractorBase","rgbColorManager","hslColorManager","tsParticles","PolygonPathGenerator","dirsList","turnSteps","hexStep","hexDirection","hexSpeed","createDirs","polygonPathName","loadPolygonPath","AbsorberSizeLimit","AbsorberSize","Absorber","draggable","orbits","AbsorberInstance","absorbers","dragging","calcPosition","mouseDist","sizeFactor","absorberOrbit","needsNewPosition","updateParticlePosition","translate","arc","newPosition","minSize","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","updateFunc","addV","Absorbers","interactivityAbsorbers","getAbsorber","idxOrName","addAbsorber","absorber","absorberOptions","modeAbsorbers","absorbersModeOptions","absorbersOptions","aPosition","removeAbsorber","AbsorbersPlugin","loadAbsorbersPlugin","DestroyBounds","SplitFactor","SplitRate","Split","rate","sizeOffset","Destroy","split","DestroyUpdater","destroyOptions","splitCount","destroyBounds","addSplitParticle","parent","splitParticlesOptions","splitOptions","particlesSplitOptions","loadDestroyUpdater","CircleShape","randomPosition","generateTheta","u","theta","atan","tan","randomTheta","maxRadius","randomRadius","EmitterLife","wait","EmitterRate","EmitterSize","Emitter","life","startCount","domId","spawnColor","EmitterInstance","emitters","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","_shape","emitterShapeManager","getShape","_firstSpawn","_startParticlesAdded","_particlesOptions","_lifeCount","_immortal","emitter","externalPause","externalPlay","elRect","getSize","_emitDelay","prepareToDie","emitParticles","_duration","emit","removeEmitter","singleParticlesOptions","hslAnimation","pPosition","initValue","maxValue","colorOffset","emitFactor","colorSpeed","Emitters","interactivityEmitters","getEmitter","addEmitter","playEmitter","pauseEmitter","emitterOptions","modeEmitters","emittersModeOptions","usedIndexes","includes","emittersOptions","ePosition","ShapeManager","addShape","randomSquareCoordinate","SquareShape","halfW","halfH","side","EmittersPlugin","emitterMode","loadEmittersPlugin","addEmitterShape","Trail","pauseOnStop","TrailMaker","trailOptions","optDelay","canEmit","_lastPosition","loadExternalTrailInteraction","RollLight","Roll","darken","enlighten","updateRoll","RollUpdater","rollHorizontal","rollVertical","rollOpt","alterType","loadRollUpdater","initPjs","particlesJS","then","catch","pJSDom","RotateAnimation","Rotate","updateAngle","rotateOptions","rotateAnimation","RotateUpdater","rotateDirection","loadAngleUpdater","applyDistance","dxFixed","dyFixed","hDistance","vDistance","vel","maxCanvasSize","applyPath","pathEnabled","getProximitySpeedFactor","BaseMover","gravityOptions","spinOptions","spinPos","spinCenter","spinAcceleration","particleOptions","slowFactor","baseSpeed","maxSize","speedFactor","diffFactor","gravityFactor","zVelocityFactor","loadBaseMover","addMover","CircleDrawer","loadCircleShape","updateColorValue","valueAnimation","decrease","updateColor","ColorUpdater","loadColorUpdater","Attract","easing","Attractor","finish","attractModeDistance","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","hoverAttract","clickAttract","attractRadius","processAttract","attractOptions","attractFactor","normVec","loadExternalAttractInteraction","Bounce","Bouncer","bounceModeDistance","processMouseBounce","singleSelectorBounce","processBounce","tolerance","querySelectorAll","elem","offsetLeft","offsetTop","loadExternalBounceInteraction","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","bubbleModeDistance","bubbleModeSize","hoverBubble","clickBubble","singleSelectorHover","divBubble","mouseClickPos","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","particlesObj","process","opacityData","hoverBubbleColor","pointDistance","hoverBubbleSize","hoverBubbleOpacity","bubbleOptions","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","pOpacity","modeSize","optSize","pSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","repulseRadius","loadExternalBubbleInteraction","ConnectLinks","Connect","links","lineLinked","line_linked","gradient","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","drawConnectLine","lineStyle","connectOptions","connect","drawConnection","ls","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","loadExternalConnectInteraction","GrabLinks","Grab","drawGrabLine","colorLine","drawGrab","lineColor","beginPos","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","loadExternalGrabInteraction","Pauser","loadExternalPauseInteraction","Push","particles_nb","Pusher","pushOptions","pushNb","loadExternalPushInteraction","Remove","Remover","removeNb","loadExternalRemoveInteraction","RepulseBase","RepulseDiv","Repulse","Repulser","repulse","repulseModeDistance","hoverRepulse","clickRepulse","singleSelectorRepulse","divRepulse","repulseDistance","vect","processRepulse","repulseOptions","repulseFactor","loadExternalRepulseInteraction","Slow","Slower","slowModeRadius","particlePos","proximityFactor","loadExternalSlowInteraction","currentColorRegex","replaceColorSvg","imageShape","svgData","colorStyle","preFillIndex","substring","loadImage","loading","img","Image","src","downloadSvgImage","text","replaceImageColor","imageData","svgColoredData","imageRes","loaded","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","_images","addImage","containerImages","getImages","globalAlpha","drawImage","loadImageShape","imageFunc","imageDrawer","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","delayTime","time","justSpawned","widthRange","heightRange","loadLifeUpdater","LineDrawer","loadLineShape","checkDestroy","minValue","updateOpacity","OpacityUpdater","opacityOptions","opacityAnimation","opacityRange","loadOpacityUpdater","bounceHorizontal","newVelocity","minPos","bounceVertical","BounceOutMode","particleBounce","DestroyOutMode","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","updateOutMode","loadOutModesUpdater","ParallaxMover","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","loadParallaxMover","ax","ay","p1Factor","p2Factor","loadParticlesAttractInteraction","updateAbsorb","r2","deleteP","resolveCollision","Collider","radius1","radius2","round","distP","loadParticlesCollisionsInteraction","CircleWarp","posNE","posSE","posSW","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","pos2NE","pos2SE","pos2SW","Linker","linkContainer","linksColors","linkOpt1","linksDistance","linkOpt2","setColor","linksColor","loadInteraction","drawLinkLine","drawn","pi1","pi2","endNE","d1","yi","endSW","d2","xi","endSE","d3","drawLinkTriangle","pos3","colorTriangle","opacityTriangle","getLinkKey","join","setLinkFrequency","dictionary","LinkInstance","_freqs","pOptions","p1Links","getLinkFrequency","link","drawTriangles","twinkle","lines","twinkleFreq","twinkleRgb","twinkling","link1","link2","triangleOptions","vertices","linkFreq","vertex","triangleFreq","getTriangleFrequency","LinksPlugin","loadPlugin","loadParticlesLinksInteraction","PolygonDrawerBase","getCenter","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","nb_sides","PolygonDrawer","TriangleDrawer","loadGenericPolygonShape","loadTriangleShape","loadPolygonShape","updateSize","sizeVelocity","SizeUpdater","loadSizeUpdater","fixFactor","SquareDrawer","loadSquareShape","StarDrawer","star","inset","loadStarShape","updateStrokeColor","_k","StrokeColorUpdater","strokeHslColor","loadStrokeColorUpdater","validTypes","TextDrawer","textData","textParticle","randomIndexData","fillText","strokeText","promises","all","loadTextShape","loadSlim","TiltAnimation","Tilt","updateTilt","tilt","tiltAnimation","TiltUpdater","cosDirection","sinDirection","tiltOptions","tiltDirection","loadTiltUpdater","TwinkleValues","Twinkle","TwinkleUpdater","twinkleOptions","twinklingOpacity","twinkleStyle","needsTwinkle","loadTwinkleUpdater","WobbleSpeed","Wobble","rangeSpeed","updateWobble","wobble","angleSpeed","wobbleDistance","WobbleUpdater","wobbleOpt","loadWobbleUpdater","loadFull"],"sourceRoot":""}